/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](https://docs.oracle.com/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details for creating a database.
 * <p>
 **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
 *
 */
export interface CreateDatabaseDetails {
  /**
   * The database name. The name must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
   */
  "dbName": string;
  /**
   * The {@code DB_UNIQUE_NAME} of the Oracle Database being backed up.
   */
  "dbUniqueName"?: string;
  /**
   * The database software image [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
   */
  "databaseSoftwareImageId"?: string;
  /**
   * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
   */
  "pdbName"?: string;
  /**
   * A strong password for SYS, SYSTEM, and PDB Admin. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numbers, and two special characters. The special characters must be _, \\#, or -.
   */
  "adminPassword": string;
  /**
   * The optional password to open the TDE wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numeric, and two special characters. The special characters must be _, \\#, or -.
   */
  "tdeWalletPassword"?: string;
  /**
    * The character set for the database.  The default is AL32UTF8. Allowed values are:
* <p>
AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
* 
    */
  "characterSet"?: string;
  /**
   * The national character set for the database.  The default is AL16UTF16. Allowed values are:
   * AL16UTF16 or UTF8.
   *
   */
  "ncharacterSet"?: string;
  /**
    * **Deprecated.** The dbWorkload field has been deprecated for Exadata Database Service on Dedicated Infrastructure, Exadata Database Service on Cloud@Customer, and Base Database Service.
* Support for this attribute will end in November 2023. You may choose to update your custom scripts to exclude the dbWorkload attribute. After November 2023 if you pass a value to the dbWorkload attribute, it will be ignored.
* <p>
The database workload type.
* 
    */
  "dbWorkload"?: CreateDatabaseDetails.DbWorkload;
  "dbBackupConfig"?: model.DbBackupConfig;
  /**
    * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
* For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
* <p>
Example: {@code {\"Department\": \"Finance\"}}
* 
    */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
   */
  "kmsKeyId"?: string;
  /**
   * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
   *
   */
  "kmsKeyVersionId"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and {@code secretId} are required for Customer Managed Keys.
   */
  "vaultId"?: string;
  /**
   * Specifies a prefix for the {@code Oracle SID} of the database to be created.
   *
   */
  "sidPrefix"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
   */
  "keyStoreId"?: string;
  "encryptionKeyLocationDetails"?:
    | model.ExternalHsmEncryptionDetails
    | model.GoogleCloudProviderEncryptionKeyDetails
    | model.AzureEncryptionKeyDetails;
  "storageSizeDetails"?: model.DatabaseStorageSizeDetails;
}

export namespace CreateDatabaseDetails {
  export enum DbWorkload {
    Oltp = "OLTP",
    Dss = "DSS"
  }

  export function getJsonObj(obj: CreateDatabaseDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "dbBackupConfig": obj.dbBackupConfig
          ? model.DbBackupConfig.getJsonObj(obj.dbBackupConfig)
          : undefined,

        "encryptionKeyLocationDetails": obj.encryptionKeyLocationDetails
          ? model.EncryptionKeyLocationDetails.getJsonObj(obj.encryptionKeyLocationDetails)
          : undefined,
        "storageSizeDetails": obj.storageSizeDetails
          ? model.DatabaseStorageSizeDetails.getJsonObj(obj.storageSizeDetails)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: CreateDatabaseDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "dbBackupConfig": obj.dbBackupConfig
          ? model.DbBackupConfig.getDeserializedJsonObj(obj.dbBackupConfig)
          : undefined,

        "encryptionKeyLocationDetails": obj.encryptionKeyLocationDetails
          ? model.EncryptionKeyLocationDetails.getDeserializedJsonObj(
              obj.encryptionKeyLocationDetails
            )
          : undefined,
        "storageSizeDetails": obj.storageSizeDetails
          ? model.DatabaseStorageSizeDetails.getDeserializedJsonObj(obj.storageSizeDetails)
          : undefined
      }
    };

    return jsonObj;
  }
}
