/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details of a Scheduling Window.
 *
 */
export interface SchedulingWindow {
  /**
   * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Scheduling Window.
   */
  "id": string;
  /**
   * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment.
   */
  "compartmentId"?: string;
  /**
   * The user-friendly name for the Scheduling Window. The name does not need to be unique.
   */
  "displayName"?: string;
  /**
   * The date and time of the next upcoming window associated within the schedulingWindow is planned to start.
   */
  "timeNextSchedulingWindowStarts"?: Date;
  /**
   * The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
   *
   */
  "lifecycleState": SchedulingWindow.LifecycleState;
  /**
   * Additional information about the current lifecycle state.
   */
  "lifecycleDetails"?: string;
  /**
   * The date and time the Scheduling Window was created.
   */
  "timeCreated"?: Date;
  /**
   * The last date and time that the Scheduling Window was updated.
   */
  "timeUpdated"?: Date;
  "windowPreference": model.WindowPreferenceDetail;
  /**
   * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
   */
  "schedulingPolicyId": string;
  /**
    * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
* For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
* <p>
Example: {@code {\"Department\": \"Finance\"}}
* 
    */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
}

export namespace SchedulingWindow {
  export enum LifecycleState {
    Creating = "CREATING",
    Available = "AVAILABLE",
    Updating = "UPDATING",
    Failed = "FAILED",
    Deleting = "DELETING",
    Deleted = "DELETED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: SchedulingWindow): object {
    const jsonObj = {
      ...obj,
      ...{
        "windowPreference": obj.windowPreference
          ? model.WindowPreferenceDetail.getJsonObj(obj.windowPreference)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: SchedulingWindow): object {
    const jsonObj = {
      ...obj,
      ...{
        "windowPreference": obj.windowPreference
          ? model.WindowPreferenceDetail.getDeserializedJsonObj(obj.windowPreference)
          : undefined
      }
    };

    return jsonObj;
  }
}
