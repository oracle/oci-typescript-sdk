/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](https://docs.oracle.com/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Information about the backup destination associated with the Autonomous Container Database.
 */
export interface BackupDestinationDetailsSummary {
  /**
   * The timestamps at which this backup destination is used as the preferred destination to host the Autonomous Container Database backups.
   */
  "backupDestinationAttachHistory"?: Array<Date>;
  /**
   * The total space utilized (in GBs) by this Autonomous Container Database on this backup destination, rounded to the nearest integer. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "spaceUtilizedInGBs"?: number;
  /**
   * The latest timestamp when the backup destination details, such as 'spaceUtilized,' are updated.
   */
  "timeAtWhichStorageDetailsAreUpdated"?: Date;
  /**
   * Type of the database backup destination.
   */
  "type": BackupDestinationDetailsSummary.Type;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
   */
  "id"?: string;
  /**
   * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
   */
  "vpcUser"?: string;
  /**
   * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
   */
  "vpcPassword"?: string;
  /**
   * Proxy URL to connect to object store.
   */
  "internetProxy"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
   */
  "dbrsPolicyId"?: string;
  /**
   * Indicates if backup retention is locked for all the database backups in the Autonomous Container Database (ACD). The retention window cannot be decreased if the backup retention lock is enabled.
   * Once applied on the Autonomous Container Database, the retention lock cannot be removed, or the retention period cannot be decreased after a 14-day period.
   * If the backup is a Long Term Backup and retention lock is enabled, the backup cannot be deleted and must expire.
   * The retention lock set on the Autonomous Container Database is not applicable for cross region remote backups and backups hosted on recovery Appliance backup destination.
   *
   */
  "isRetentionLockEnabled"?: boolean;
  /**
   * Defines the automatic and manual backup retention policy for the Autonomous Database termination.
   * The retention policy set on the Autonomous Container Database is not applicable for cross region remote backups and backups hosted on recovery Appliance backup destination.
   * Options are 'RETAIN_PER_RETENTION_WINDOW' or 'RETAIN_FOR_72_HOURS'.The default value is 'RETAIN_FOR_72_HOURS'.
   *
   */
  "backupRetentionPolicyOnTerminate"?: BackupDestinationDetailsSummary.BackupRetentionPolicyOnTerminate;
  /**
   * Indicates whether the backup destination is cross-region or local.
   */
  "isRemote"?: boolean;
  /**
   * The name of the remote region where the remote automatic incremental backups will be stored.
   * For information about valid region names, see
   * [Regions and Availability Domains](https://docs.oracle.com/iaas/Content/General/Concepts/regions.htm).
   *
   */
  "remoteRegion"?: string;
}

export namespace BackupDestinationDetailsSummary {
  export enum Type {
    Nfs = "NFS",
    RecoveryAppliance = "RECOVERY_APPLIANCE",
    ObjectStore = "OBJECT_STORE",
    Local = "LOCAL",
    Dbrs = "DBRS",
    AwsS3 = "AWS_S3",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum BackupRetentionPolicyOnTerminate {
    RetainPerRetentionWindow = "RETAIN_PER_RETENTION_WINDOW",
    RetainFor72Hours = "RETAIN_FOR_72_HOURS",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: BackupDestinationDetailsSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: BackupDestinationDetailsSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
