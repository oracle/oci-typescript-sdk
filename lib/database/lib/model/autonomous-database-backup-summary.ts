/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](https://docs.oracle.com/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * An Autonomous Database backup.
 * To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
 *
 * **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
 *
 */
export interface AutonomousDatabaseBackupSummary {
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
   */
  "id": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
   */
  "compartmentId": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database.
   */
  "autonomousDatabaseId": string;
  /**
   * The user-friendly name for the backup. The name does not have to be unique.
   */
  "displayName": string;
  /**
   * The type of backup.
   */
  "type": AutonomousDatabaseBackupSummary.Type;
  /**
   * Indicates whether the backup is user-initiated or automatic.
   */
  "isAutomatic": boolean;
  /**
   * The date and time the backup started.
   */
  "timeStarted"?: Date;
  /**
   * The date and time the backup completed.
   */
  "timeEnded"?: Date;
  /**
   * Additional information about the current lifecycle state.
   */
  "lifecycleDetails"?: string;
  /**
   * The size of the database in terabytes at the time the backup was taken.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "databaseSizeInTBs"?: number;
  /**
   * The current state of the backup.
   */
  "lifecycleState": AutonomousDatabaseBackupSummary.LifecycleState;
  /**
   * Indicates whether the backup can be used to restore the associated Autonomous Database.
   */
  "isRestorable"?: boolean;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
   */
  "keyStoreId"?: string;
  /**
   * The wallet name for Oracle Key Vault.
   */
  "keyStoreWalletName"?: string;
  /**
   * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
   */
  "kmsKeyId"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and {@code secretId} are required for Customer Managed Keys.
   */
  "vaultId"?: string;
  /**
   * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
   *
   */
  "kmsKeyVersionId"?: string;
  /**
   * Retention period, in days, for long-term backups Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "retentionPeriodInDays"?: number;
  /**
   * Timestamp until when the backup will be available
   */
  "timeAvailableTill"?: Date;
  /**
   * A valid Oracle Database version for Autonomous Database.
   */
  "dbVersion"?: string;
  /**
   * The backup size in terrabytes (TB). Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "sizeInTBs"?: number;
  "backupDestinationDetails"?: model.BackupDestinationDetails;
  /**
   * The infrastructure type this resource belongs to.
   */
  "infrastructureType"?: AutonomousDatabaseBackupSummary.InfrastructureType;
  /**
   * Name of the region in which backup is taken in.
   */
  "region"?: string;
  "sourceDatabaseDetails"?: model.SourceDatabaseDetails;
}

export namespace AutonomousDatabaseBackupSummary {
  export enum Type {
    Incremental = "INCREMENTAL",
    Full = "FULL",
    Longterm = "LONGTERM",
    VirtualFull = "VIRTUAL_FULL",
    CumulativeIncremental = "CUMULATIVE_INCREMENTAL",
    RollForwardImageCopy = "ROLL_FORWARD_IMAGE_COPY",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum LifecycleState {
    Creating = "CREATING",
    Active = "ACTIVE",
    Deleting = "DELETING",
    Deleted = "DELETED",
    Failed = "FAILED",
    Updating = "UPDATING",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum InfrastructureType {
    Cloud = "CLOUD",
    CloudAtCustomer = "CLOUD_AT_CUSTOMER",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: AutonomousDatabaseBackupSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "backupDestinationDetails": obj.backupDestinationDetails
          ? model.BackupDestinationDetails.getJsonObj(obj.backupDestinationDetails)
          : undefined,

        "sourceDatabaseDetails": obj.sourceDatabaseDetails
          ? model.SourceDatabaseDetails.getJsonObj(obj.sourceDatabaseDetails)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: AutonomousDatabaseBackupSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "backupDestinationDetails": obj.backupDestinationDetails
          ? model.BackupDestinationDetails.getDeserializedJsonObj(obj.backupDestinationDetails)
          : undefined,

        "sourceDatabaseDetails": obj.sourceDatabaseDetails
          ? model.SourceDatabaseDetails.getDeserializedJsonObj(obj.sourceDatabaseDetails)
          : undefined
      }
    };

    return jsonObj;
  }
}
