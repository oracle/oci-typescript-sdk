/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](https://docs.oracle.com/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

export interface DbNode {
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database node.
   */
  "id": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
   */
  "dbSystemId": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
   */
  "vnicId": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
   */
  "backupVnicId"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IPv4 address associated with the database node. Use this OCID with either the
   * {@link #getPrivateIp(GetPrivateIpRequest) getPrivateIp} or the {@link #getPublicIpByPrivateIpId(GetPublicIpByPrivateIpIdRequest) getPublicIpByPrivateIpId} API to get the IPv4 address
   * needed to make a database connection.
   * <p>
   **Note:** Applies only to Exadata Cloud Service.
   *
   */
  "hostIpId"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IPv4 address associated with the database node. Use this OCID with either the
   * {@link #getPrivateIp(GetPrivateIpRequest) getPrivateIp} or the {@link #getPublicIpByPrivateIpId(GetPublicIpByPrivateIpIdRequest) getPublicIpByPrivateIpId} API to get the IPv4 address
   * needed to make a database connection.
   * <p>
   **Note:** Applies only to Exadata Cloud Service.
   *
   */
  "backupIpId"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IPv6 address associated with the database node. Use this OCID with the
   * {@link #getIpv6(GetIpv6Request) getIpv6} API to get the IPv6 address needed to make a database connection.
   * <p>
   **Note:** Applies only to Exadata Cloud Service.
   *
   */
  "hostIpv6Id"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IPv6 address associated with the database node. Use this OCID with the
   * {@link #getIpv6(GetIpv6Request) getIpv6} API to get the IPv6 address needed to make a database connection.
   * <p>
   **Note:** Applies only to Exadata Cloud Service.
   *
   */
  "backupIpv6Id"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second VNIC.
   * <p>
   **Note:** Applies only to Exadata Cloud Service.
   *
   */
  "vnic2Id"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second backup VNIC.
   * <p>
   **Note:** Applies only to Exadata Cloud Service.
   *
   */
  "backupVnic2Id"?: string;
  /**
   * The current state of the database node.
   */
  "lifecycleState": DbNode.LifecycleState;
  /**
   * The host name for the database node.
   */
  "hostname"?: string;
  /**
   * The name of the Fault Domain the instance is contained in.
   */
  "faultDomain"?: string;
  /**
   * The date and time that the database node was created.
   */
  "timeCreated": Date;
  /**
   * The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "softwareStorageSizeInGB"?: number;
  /**
   * The type of database node maintenance.
   */
  "maintenanceType"?: DbNode.MaintenanceType;
  /**
   * Start date and time of maintenance window.
   */
  "timeMaintenanceWindowStart"?: Date;
  /**
   * End date and time of maintenance window.
   */
  "timeMaintenanceWindowEnd"?: Date;
  /**
   * Additional information about the planned maintenance.
   */
  "additionalDetails"?: string;
  /**
    * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
* For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
* <p>
Example: {@code {\"Department\": \"Finance\"}}
* 
    */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * System tags for this resource. Each key is predefined and scoped to a namespace.
   * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
   *
   */
  "systemTags"?: { [key: string]: { [key: string]: any } };
  /**
   * Information about the current lifecycle state.
   */
  "lifecycleDetails"?: string;
  /**
   * The number of CPU cores enabled on the Db node. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "cpuCoreCount"?: number;
  /**
   * The allocated memory in GBs on the Db node. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "memorySizeInGBs"?: number;
  /**
   * The allocated local node storage in GBs on the Db node. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "dbNodeStorageSizeInGBs"?: number;
  /**
   * The total number of CPU cores reserved on the Db node. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "totalCpuCoreCount"?: number;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server associated with the database node.
   */
  "dbServerId"?: string;
  /**
   * The compute model for Base Database Service. This is required if using the {@code computeCount} parameter. If using {@code cpuCoreCount} then it is an error to specify {@code computeModel} to a non-null value. The ECPU compute model is the recommended model, and the OCPU compute model is legacy.
   */
  "computeModel"?: DbNode.ComputeModel;
  /**
   * The number of compute servers for the DB system. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "computeCount"?: number;
}

export namespace DbNode {
  export enum LifecycleState {
    Provisioning = "PROVISIONING",
    Available = "AVAILABLE",
    Updating = "UPDATING",
    Stopping = "STOPPING",
    Stopped = "STOPPED",
    Starting = "STARTING",
    Terminating = "TERMINATING",
    Terminated = "TERMINATED",
    Failed = "FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum MaintenanceType {
    VmdbRebootMigration = "VMDB_REBOOT_MIGRATION",
    ExadbxsRebootMigration = "EXADBXS_REBOOT_MIGRATION",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum ComputeModel {
    Ecpu = "ECPU",
    Ocpu = "OCPU",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: DbNode): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: DbNode): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
