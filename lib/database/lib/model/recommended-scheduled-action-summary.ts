/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details of the scheduled action that is used in getRecommendedScheduledActions.
 *
 */
export interface RecommendedScheduledActionSummary {
  /**
   * The order of the scheduled action. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "actionOrder": number;
  /**
   * The type of the scheduled action being performed
   */
  "actionType": RecommendedScheduledActionSummary.ActionType;
  /**
   * Description of the scheduled action being performed, i.e. apply full update to DB Servers 1,2,3,4.
   */
  "displayName"?: string;
  /**
   * The id of the scheduling window this scheduled action belongs to.
   */
  "schedulingWindowId": string;
  /**
   * The estimated patching time in minutes for the entire scheduled action. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "estimatedTimeInMins"?: number;
  /**
   * The list of action members in a scheduled action.
   */
  "actionMembers"?: Array<model.ActionMember>;
  /**
   * Map<ParamName, ParamValue> where a key value pair describes the specific action parameter.
   * Example: {@code {\"count\": \"3\"}}
   *
   */
  "actionParams"?: { [key: string]: string };
}

export namespace RecommendedScheduledActionSummary {
  export enum ActionType {
    DbServerFullSoftwareUpdate = "DB_SERVER_FULL_SOFTWARE_UPDATE",
    StorageServerFullSoftwareUpdate = "STORAGE_SERVER_FULL_SOFTWARE_UPDATE",
    NetworkSwitchFullSoftwareUpdate = "NETWORK_SWITCH_FULL_SOFTWARE_UPDATE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: RecommendedScheduledActionSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "actionMembers": obj.actionMembers
          ? obj.actionMembers.map(item => {
              return model.ActionMember.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: RecommendedScheduledActionSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "actionMembers": obj.actionMembers
          ? obj.actionMembers.map(item => {
              return model.ActionMember.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
