/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](https://docs.oracle.com/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details of the Autonomous Database encryption key.
 */
export interface AutonomousDatabaseEncryptionKeyDetails {
  "provider": string;
}

export namespace AutonomousDatabaseEncryptionKeyDetails {
  export function getJsonObj(obj: AutonomousDatabaseEncryptionKeyDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "provider" in obj && obj.provider) {
      switch (obj.provider) {
        case "OKV":
          return model.OkvKeyDetails.getJsonObj(<model.OkvKeyDetails>(<object>jsonObj), true);
        case "AZURE":
          return model.AzureKeyDetails.getJsonObj(<model.AzureKeyDetails>(<object>jsonObj), true);
        case "AWS":
          return model.AwsKeyDetails.getJsonObj(<model.AwsKeyDetails>(<object>jsonObj), true);
        case "OCI":
          return model.OciKeyDetails.getJsonObj(<model.OciKeyDetails>(<object>jsonObj), true);
        case "GCP":
          return model.GcpKeyDetails.getJsonObj(<model.GcpKeyDetails>(<object>jsonObj), true);
        case "ORACLE_MANAGED":
          return model.OracleManagedKeyDetails.getJsonObj(
            <model.OracleManagedKeyDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.provider}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: AutonomousDatabaseEncryptionKeyDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "provider" in obj && obj.provider) {
      switch (obj.provider) {
        case "OKV":
          return model.OkvKeyDetails.getDeserializedJsonObj(
            <model.OkvKeyDetails>(<object>jsonObj),
            true
          );
        case "AZURE":
          return model.AzureKeyDetails.getDeserializedJsonObj(
            <model.AzureKeyDetails>(<object>jsonObj),
            true
          );
        case "AWS":
          return model.AwsKeyDetails.getDeserializedJsonObj(
            <model.AwsKeyDetails>(<object>jsonObj),
            true
          );
        case "OCI":
          return model.OciKeyDetails.getDeserializedJsonObj(
            <model.OciKeyDetails>(<object>jsonObj),
            true
          );
        case "GCP":
          return model.GcpKeyDetails.getDeserializedJsonObj(
            <model.GcpKeyDetails>(<object>jsonObj),
            true
          );
        case "ORACLE_MANAGED":
          return model.OracleManagedKeyDetails.getDeserializedJsonObj(
            <model.OracleManagedKeyDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.provider}`);
      }
    }
    return jsonObj;
  }
}
