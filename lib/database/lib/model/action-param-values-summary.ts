/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details of the action parameter and its possible values that is used in listParamsForActionType.
 *
 */
export interface ActionParamValuesSummary {
  /**
   * The name of this parameter.
   */
  "parameterName": string;
  /**
   * The type of the parameter.
   */
  "parameterType": ActionParamValuesSummary.ParameterType;
  /**
   * Possible values for this parameter. In case of integer it's min and max values.
   */
  "parameterValues": Array<string>;
  /**
   * The default value for this parameter.
   */
  "defaultValue"?: string;
  /**
   * Whether this parameter is required or not for this action type.\u3001
   */
  "isRequired": boolean;
}

export namespace ActionParamValuesSummary {
  export enum ParameterType {
    Boolean = "BOOLEAN",
    String = "STRING",
    Integer = "INTEGER",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: ActionParamValuesSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ActionParamValuesSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
