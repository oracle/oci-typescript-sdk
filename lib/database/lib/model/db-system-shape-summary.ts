/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](https://docs.oracle.com/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
* The shape of the DB system. The shape determines resources to allocate to the DB system - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes.
* <p>
For Exadata fixed and flexible shapes, detailed specifications can be found in https://docs.oracle.com/en/engineered-systems/exadata-cloud-service/ecscm/exa-service-desc.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B
* <p>
To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator.
* If you're an administrator who needs to write policies to give users access,
* see [Getting Started with Policies](https://docs.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
* 
*/
export interface DbSystemShapeSummary {
  /**
   * The name of the shape used for the DB system.
   */
  "name": string;
  /**
   * The family of the shape used for the DB system.
   */
  "shapeFamily"?: string;
  /**
   * The shape type for the virtual machine DB system. Shape type is determined by CPU hardware. Valid values are {@code AMD} , {@code INTEL}, {@code INTEL_FLEX_X9} or {@code AMPERE_FLEX_A1}.
   */
  "shapeType"?: DbSystemShapeSummary.ShapeType;
  /**
   * Deprecated. Use {@code name} instead of {@code shape}.
   */
  "shape"?: string;
  /**
   * The maximum number of CPU cores that can be enabled on the DB system for this shape. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "availableCoreCount": number;
  /**
   * The minimum number of CPU cores that can be enabled on the DB system for this shape. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "minimumCoreCount"?: number;
  /**
   * The discrete number by which the CPU core count for this shape can be increased or decreased. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "coreCountIncrement"?: number;
  /**
   * The minimum number of Exadata storage servers available for the Exadata infrastructure. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "minStorageCount"?: number;
  /**
   * The maximum number of Exadata storage servers available for the Exadata infrastructure. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maxStorageCount"?: number;
  /**
   * The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "availableDataStoragePerServerInTBs"?: number;
  /**
   * The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "availableMemoryPerNodeInGBs"?: number;
  /**
   * The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "availableDbNodePerNodeInGBs"?: number;
  /**
   * The minimum number of CPU cores that can be enabled per node for this shape. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "minCoreCountPerNode"?: number;
  /**
   * The maximum memory that can be enabled for this shape. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "availableMemoryInGBs"?: number;
  /**
   * The minimum memory that need be allocated per node for this shape. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "minMemoryPerNodeInGBs"?: number;
  /**
   * The maximum Db Node storage that can be enabled for this shape. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "availableDbNodeStorageInGBs"?: number;
  /**
   * The minimum Db Node storage that need be allocated per node for this shape. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "minDbNodeStoragePerNodeInGBs"?: number;
  /**
   * The maximum DATA storage that can be enabled for this shape. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "availableDataStorageInTBs"?: number;
  /**
   * The minimum data storage that need be allocated for this shape. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "minDataStorageInTBs"?: number;
  /**
   * The display name of the shape used for the DB system.
   */
  "displayName"?: string;
  /**
   * The compute model of the Autonomous Database. This is required if using the {@code computeCount} parameter. If using {@code cpuCoreCount} then it is an error to specify {@code computeModel} to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
   */
  "computeModel"?: DbSystemShapeSummary.ComputeModel;
  /**
   * If true, the shape supports configurable DB and Storage Server types.
   */
  "areServerTypesSupported"?: boolean;
  /**
   * The minimum number of compute servers available for this shape. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "minimumNodeCount"?: number;
  /**
   * The maximum number of compute servers available for this shape. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maximumNodeCount"?: number;
  /**
   * The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape, ExaCC Elastic shapes and VM Flex shapes. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "availableCoreCountPerNode"?: number;
  /**
   * The shapeAttributes of the DB system shape.
   *
   */
  "shapeAttributes"?: Array<string>;
}

export namespace DbSystemShapeSummary {
  export enum ShapeType {
    Amd = "AMD",
    Intel = "INTEL",
    IntelFlexX9 = "INTEL_FLEX_X9",
    AmpereFlexA1 = "AMPERE_FLEX_A1",
    StandardX86 = "STANDARD_X86",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum ComputeModel {
    Ecpu = "ECPU",
    Ocpu = "OCPU",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: DbSystemShapeSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: DbSystemShapeSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
