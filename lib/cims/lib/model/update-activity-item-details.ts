/**
 * Support Management API
 * Use the Support Management API to manage support requests.
For more information, see [Getting Help and Contacting Support](https://docs.oracle.com/iaas/Content/GSG/Tasks/contactingsupport.htm).
**Note**: Before you can create service requests with this API,
complete user registration at My Oracle Cloud Support 
and then ask your tenancy administrator to provide you authorization for the related user groups.

 * OpenAPI spec version: 20181231
 * Contact: oci_ops_cims_dev_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details for updating the support request activity.
 *
 */
export interface UpdateActivityItemDetails extends model.UpdateItemDetails {
  /**
   * Comments updated at the time that the activity occurs.
   */
  "comments"?: string;
  /**
   * The type of activity occurring.
   * {@code NOTES} is the activity associated to attachments.
   * {@code PROBLEM_DESCRIPTION} is the activity associated to customer problem description.
   * {@code UPDATE} is the activity associated to adding comments.
   * {@code CLOSE} is the activity associated to closing the support request.
   * {@code REOPEN} is the activity associated to reopening the support request.
   * {@code ADD_CONTACT} is the activity associated to adding additional contact to the support request.
   *
   */
  "activityType"?: UpdateActivityItemDetails.ActivityType;

  "type": string;
}

export namespace UpdateActivityItemDetails {
  export enum ActivityType {
    Notes = "NOTES",
    ProblemDescription = "PROBLEM_DESCRIPTION",
    Update = "UPDATE",
    Close = "CLOSE",
    Reopen = "REOPEN",
    AddContact = "ADD_CONTACT"
  }

  export function getJsonObj(obj: UpdateActivityItemDetails, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UpdateItemDetails.getJsonObj(obj) as UpdateActivityItemDetails)),
      ...{}
    };

    return jsonObj;
  }
  export const type = "activity";
  export function getDeserializedJsonObj(
    obj: UpdateActivityItemDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UpdateItemDetails.getDeserializedJsonObj(obj) as UpdateActivityItemDetails)),
      ...{}
    };

    return jsonObj;
  }
}
