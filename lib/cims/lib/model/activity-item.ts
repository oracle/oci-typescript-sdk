/**
 * Support Management API
 * Use the Support Management API to manage support requests.
For more information, see [Getting Help and Contacting Support](https://docs.oracle.com/iaas/Content/GSG/Tasks/contactingsupport.htm).
**Note**: Before you can create service requests with this API,
complete user registration at My Oracle Cloud Support 
and then ask your tenancy administrator to provide you authorization for the related user groups.

 * OpenAPI spec version: 20181231
 * Contact: oci_ops_cims_dev_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details about the ActivityItem object.
 */
export interface ActivityItem extends model.Item {
  /**
   * Identifier of the activity on the support request.
   */
  "id"?: string;
  /**
   * Comments or file attachments added with the activity on the support request.
   */
  "comments": string;
  /**
   * The time when the activity was created, in seconds since epoch time. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "timeCreated": number;
  /**
   * The time when the activity was updated, in seconds since epoch time. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "timeUpdated": number;
  /**
   * The type of activity occuring on the support request.
   */
  "activityType": ActivityItem.ActivityType;
  "activityAuthor": ActivityItem.ActivityAuthor;
  "itemType"?: ActivityItem.ItemType;
  /**
   * Who updates the activity on the support request.
   */
  "itemStatus"?: ActivityItem.ItemStatus;
  /**
   * attachmentID for the ItemType Attachments only for Alloy realm.
   */
  "attachmentID"?: string;

  "type": string;
}

export namespace ActivityItem {
  export enum ActivityType {
    Notes = "NOTES",
    ProblemDescription = "PROBLEM_DESCRIPTION",
    Update = "UPDATE",
    Close = "CLOSE",
    Reopen = "REOPEN",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum ActivityAuthor {
    Customer = "CUSTOMER",
    Oracle = "ORACLE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum ItemType {
    Attachments = "ATTACHMENTS",
    Comments = "COMMENTS",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum ItemStatus {
    Processing = "PROCESSING",
    Attached = "ATTACHED",
    Removed = "REMOVED",
    Failed = "FAILED",
    Rejected = "REJECTED",
    Received = "RECEIVED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: ActivityItem, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.Item.getJsonObj(obj) as ActivityItem)),
      ...{}
    };

    return jsonObj;
  }
  export const type = "activity";
  export function getDeserializedJsonObj(obj: ActivityItem, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.Item.getDeserializedJsonObj(obj) as ActivityItem)),
      ...{}
    };

    return jsonObj;
  }
}
