/**
 * Document Understanding API
 * Document AI helps customers perform various analysis on their documents. If a customer has lots of documents, they can process them in batch using asynchronous API endpoints.
 * OpenAPI spec version: 20221109
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Resource locks prevent certain APIs from being called for the resource.
 * A full lock prevents both updating and deleting the resource. A lock delete
 * prevents deleting the resource.
 *
 */
export interface ResourceLock {
  /**
   * Lock type.
   */
  "type": ResourceLock.Type;
  /**
   * The lock compartment ID.
   */
  "compartmentId": string;
  /**
   * The resource ID that is locking this resource. Indicates that deleting this resource removes the lock.
   *
   */
  "relatedResourceId"?: string;
  /**
   * A message added by the lock creator. The message typically gives an
   * indication of why the resource is locked.
   *
   */
  "message"?: string;
  /**
   * Indicates when the lock was created, in the format defined by RFC 3339.
   */
  "timeCreated"?: Date;
}

export namespace ResourceLock {
  export enum Type {
    Full = "FULL",
    Delete = "DELETE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: ResourceLock): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ResourceLock): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
