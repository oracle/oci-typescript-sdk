/**
 * Java Management Service Java Download API
 * The APIs for the [Java Download](https://docs.oracle.com/en-us/iaas/jms/doc/java-download.html) feature of Java Management Service.
 * OpenAPI spec version: 20230601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Attributes to summarize the Java download counts in a tenancy.
 */
export interface RequestSummarizedJavaDownloadCountsDetails {
  /**
   * The compartment [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) here should be the tenancy OCID.
   *
   */
  "compartmentId": string;
  /**
   * The property that specifies the aggregation type for the download counts.
   */
  "groupAs": model.JavaDownloadCountAggregationType;
  /**
   * Unique Java family version identifier.
   */
  "familyVersion"?: string;
  /**
   * Unique Java release version identifier.
   */
  "releaseVersion"?: string;
  /**
   * The start time from when download data has to be included (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
   *
   */
  "timeStart"?: Date;
  /**
   * The end time until when the download data has to be included (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
   *
   */
  "timeEnd"?: Date;
  /**
   * The property to be used for sorting the aggregated report.
   */
  "sortBy"?: model.AggregationSortBy;
  /**
   * The sort order for the aggregated report.
   */
  "sortOrder"?: model.SortOrder;
  /**
   * The maximum number of items to return. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "limit"?: number;
  /**
   * The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous call.
   *
   */
  "page"?: string;
}

export namespace RequestSummarizedJavaDownloadCountsDetails {
  export function getJsonObj(obj: RequestSummarizedJavaDownloadCountsDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: RequestSummarizedJavaDownloadCountsDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
