/**
 * Exadata Fleet Update service API
 * Use the Exadata Fleet Update service to patch large collections of components directly,
as a single entity, orchestrating the maintenance actions to update all chosen components in the stack in a single cycle.

 * OpenAPI spec version: 20220528
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details of a target member of a Exadata Fleet Update Collection.
 *
 */
export interface FsuCollectionTarget {
  "target":
    | model.VmClusterTargetSummary
    | model.CloudVmClusterTargetSummary
    | model.DatabaseTargetSummary;
  /**
   * Current version of the target.
   *
   */
  "currentVersion"?: string;
  /**
   * Status of the target in the Exadata Fleet Update Collection.
   *
   */
  "status"?: FsuCollectionTarget.Status;
  /**
   * Exadata Fleet Update Job OCID executing an action in the target. Null if no job is being executed.
   *
   */
  "executingFsuJobId"?: string;
  /**
   * Active Exadata Fleet Update Cycle OCID. Null if no Cycle is active that has this target as member.
   *
   */
  "activeFsuCycleId"?: string;
  "progress"?: model.TargetProgressSummary;
}

export namespace FsuCollectionTarget {
  export enum Status {
    Idle = "IDLE",
    ExecutingJob = "EXECUTING_JOB",
    JobFailed = "JOB_FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: FsuCollectionTarget): object {
    const jsonObj = {
      ...obj,
      ...{
        "target": obj.target ? model.TargetDetails.getJsonObj(obj.target) : undefined,

        "progress": obj.progress ? model.TargetProgressSummary.getJsonObj(obj.progress) : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: FsuCollectionTarget): object {
    const jsonObj = {
      ...obj,
      ...{
        "target": obj.target ? model.TargetDetails.getDeserializedJsonObj(obj.target) : undefined,

        "progress": obj.progress
          ? model.TargetProgressSummary.getDeserializedJsonObj(obj.progress)
          : undefined
      }
    };

    return jsonObj;
  }
}
