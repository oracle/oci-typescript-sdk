/**
 * Exadata Fleet Update service API
 * Use the Exadata Fleet Update service to patch large collections of components directly,
as a single entity, orchestrating the maintenance actions to update all chosen components in the stack in a single cycle.

 * OpenAPI spec version: 20220528
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Exadata Image (Guest OS) versions to include when discovering Exadata VM Cluster targets for a 'GUEST_OS' collection.
 * Only versions related to the specified sourceMajorVersion are allowed.
 * For example, version \"22.1.26.0.0.240801\" can be specified for sourceMajorVersion \"EXA_OL_7\" (Oracle Linux 7).
 *
 */
export interface GuestOsVersionFilter extends model.GuestOsFleetDiscoveryFilter {
  /**
   * List of Exadata Image (Guest OS) version strings to include when discovering Exadata VM Cluster targets for a 'GUEST_OS' collection.
   *
   */
  "versions": Array<string>;

  "type": string;
}

export namespace GuestOsVersionFilter {
  export function getJsonObj(obj: GuestOsVersionFilter, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.GuestOsFleetDiscoveryFilter.getJsonObj(obj) as GuestOsVersionFilter)),
      ...{}
    };

    return jsonObj;
  }
  export const type = "VERSION";
  export function getDeserializedJsonObj(
    obj: GuestOsVersionFilter,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.GuestOsFleetDiscoveryFilter.getDeserializedJsonObj(obj) as GuestOsVersionFilter)),
      ...{}
    };

    return jsonObj;
  }
}
