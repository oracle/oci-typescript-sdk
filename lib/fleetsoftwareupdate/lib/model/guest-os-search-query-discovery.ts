/**
 * Exadata Fleet Update service API
 * Use the Exadata Fleet Update service to patch large collections of components directly,
as a single entity, orchestrating the maintenance actions to update all chosen components in the stack in a single cycle.

 * OpenAPI spec version: 20220528
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Discover Exadata VM Cluster targets for a 'GUEST_OS' collection by querying [OCI Search Service](https://docs.oracle.com/iaas/Content/Search/Concepts/queryoverview.htm) using specified query string.
 *
 */
export interface GuestOsSearchQueryDiscovery extends model.GuestOsFleetDiscoveryDetails {
  /**
   * [OCI Search Service](https://docs.oracle.com/iaas/Content/Search/Concepts/queryoverview.htm) query string.
   *
   */
  "query": string;

  "strategy": string;
}

export namespace GuestOsSearchQueryDiscovery {
  export function getJsonObj(obj: GuestOsSearchQueryDiscovery, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.GuestOsFleetDiscoveryDetails.getJsonObj(obj) as GuestOsSearchQueryDiscovery)),
      ...{}
    };

    return jsonObj;
  }
  export const strategy = "SEARCH_QUERY";
  export function getDeserializedJsonObj(
    obj: GuestOsSearchQueryDiscovery,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.GuestOsFleetDiscoveryDetails.getDeserializedJsonObj(
            obj
          ) as GuestOsSearchQueryDiscovery)),
      ...{}
    };

    return jsonObj;
  }
}
