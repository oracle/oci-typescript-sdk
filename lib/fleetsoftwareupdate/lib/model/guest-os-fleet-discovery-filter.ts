/**
 * Exadata Fleet Update service API
 * Use the Exadata Fleet Update service to patch large collections of components directly,
as a single entity, orchestrating the maintenance actions to update all chosen components in the stack in a single cycle.

 * OpenAPI spec version: 20220528
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Discover Exadata VM Cluster targets for a 'GUEST_OS' collection by querying [OCI Search Service](https://docs.oracle.com/iaas/Content/Search/Concepts/queryoverview.htm) using specified filters.
 *
 */
export interface GuestOsFleetDiscoveryFilter {
  /**
   * INCLUDE or EXCLUDE the filter results when discovering Exadata VM Cluster targets for a 'GUEST_OS' collection.
   * Supported only for RESOURCE_ID filter.
   *
   */
  "mode"?: GuestOsFleetDiscoveryFilter.Mode;

  "type": string;
}

export namespace GuestOsFleetDiscoveryFilter {
  export enum Mode {
    Include = "INCLUDE",
    Exclude = "EXCLUDE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: GuestOsFleetDiscoveryFilter): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "type" in obj && obj.type) {
      switch (obj.type) {
        case "VERSION":
          return model.GuestOsVersionFilter.getJsonObj(
            <model.GuestOsVersionFilter>(<object>jsonObj),
            true
          );
        case "EXADATA_RELEASE_VERSION":
          return model.GuestOsExadataReleaseVersionFilter.getJsonObj(
            <model.GuestOsExadataReleaseVersionFilter>(<object>jsonObj),
            true
          );
        case "FREEFORM_TAG":
          return model.GuestOsFreeformTagsFilter.getJsonObj(
            <model.GuestOsFreeformTagsFilter>(<object>jsonObj),
            true
          );
        case "DEFINED_TAG":
          return model.GuestOsDefinedTagsFilter.getJsonObj(
            <model.GuestOsDefinedTagsFilter>(<object>jsonObj),
            true
          );
        case "COMPARTMENT_ID":
          return model.GuestOsCompartmentIdFilter.getJsonObj(
            <model.GuestOsCompartmentIdFilter>(<object>jsonObj),
            true
          );
        case "RESOURCE_ID":
          return model.GuestOsResourceIdFilter.getJsonObj(
            <model.GuestOsResourceIdFilter>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.type}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: GuestOsFleetDiscoveryFilter): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "type" in obj && obj.type) {
      switch (obj.type) {
        case "VERSION":
          return model.GuestOsVersionFilter.getDeserializedJsonObj(
            <model.GuestOsVersionFilter>(<object>jsonObj),
            true
          );
        case "EXADATA_RELEASE_VERSION":
          return model.GuestOsExadataReleaseVersionFilter.getDeserializedJsonObj(
            <model.GuestOsExadataReleaseVersionFilter>(<object>jsonObj),
            true
          );
        case "FREEFORM_TAG":
          return model.GuestOsFreeformTagsFilter.getDeserializedJsonObj(
            <model.GuestOsFreeformTagsFilter>(<object>jsonObj),
            true
          );
        case "DEFINED_TAG":
          return model.GuestOsDefinedTagsFilter.getDeserializedJsonObj(
            <model.GuestOsDefinedTagsFilter>(<object>jsonObj),
            true
          );
        case "COMPARTMENT_ID":
          return model.GuestOsCompartmentIdFilter.getDeserializedJsonObj(
            <model.GuestOsCompartmentIdFilter>(<object>jsonObj),
            true
          );
        case "RESOURCE_ID":
          return model.GuestOsResourceIdFilter.getDeserializedJsonObj(
            <model.GuestOsResourceIdFilter>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.type}`);
      }
    }
    return jsonObj;
  }
}
