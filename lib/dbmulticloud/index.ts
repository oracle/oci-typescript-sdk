/**
 * Oracle Database MultiCloud Data Plane Integration
 * <b>Microsoft Azure:</b> <br>
<b>Oracle Azure Connector Resource:</b>:&nbsp;&nbsp;The Oracle Azure Connector Resource is used to install the Azure Arc Server on an Exadata VM cluster in Oracle Exadata Database Service on Dedicated Infrastructure (ExaDB-D).
 The supported method to install the Azure Arc Server (Azure Identity) on the Exadata VM cluster:
<ul>
 <li>Using a Bearer Access Token</li>
</ul>

<b>Oracle Azure Blob Container Resource:</b>&nbsp;&nbsp;The Oracle Azure Blob Container Resource is used to capture the details of an Azure Blob Container. 
This resource can then be reused across multiple Exadata VM clusters in Oracle Exadata Database Service on Dedicated Infrastructure (ExaDB-D) to mount the Azure container.

<b>Oracle Azure Blob Mount Resource:</b>&nbsp;&nbsp;The Oracle Azure Blob Mount Resource is used to mount an Azure Blob Container on an Exadata VM cluster in Oracle Exadata Database Service on Dedicated Infrastructure (ExaDB-D).
It relies on both the Oracle Azure Connector and the Oracle Azure Blob Container Resource to perform the mount operation.

<b>Discover Azure Vaults and Keys Resource:</b>&nbsp;&nbsp;The Discover Oracle Azure Vaults and Azure Keys Resource is used to discover Azure Vaults and the associated encryption keys available in your Azure project.

<b>Oracle Azure Vault:</b>&nbsp;&nbsp;The Oracle Azure Vault Resource is used to manage Azure Vaults within Oracle Cloud Infrastructure (OCI) for use with services such as Oracle Exadata Database Service on Dedicated Infrastructure.

<b>Oracle Azure Key:</b>&nbsp;&nbsp;Oracle Azure Key Resource is used to register and manage a Oracle Azure Key Key within Oracle Cloud Infrastructure (OCI) under an associated Azure Vault.

<br>

<b>Google Cloud:</b><br>
<b>Oracle Google Cloud Connector Resource:</b>&nbsp;&nbsp;The Oracle Google Cloud Connector Resource is used to install the Google Cloud Identity Connector on an Exadata VM cluster in Oracle Exadata Database Service on Dedicated Infrastructure (ExaDB-D).

<b>Discover Google Key Rings and Keys Resource:</b>&nbsp;&nbsp;The Discover Google Key Rings and Keys Resource is used to discover Google Cloud Key Rings and the associated encryption keys available in your Google Cloud project.

<b>Google Key Rings Resource:</b>&nbsp;&nbsp;The Google Key Rings Resource is used to register and manage Google Cloud Key Rings within Oracle Cloud Infrastructure (OCI) for use with services such as Oracle Exadata Database Service on Dedicated Infrastructure.

<b>Google Key Resource:</b>&nbsp;&nbsp;The Google Key Resource is used to register and manage a Google Cloud Key within Oracle Cloud Infrastructure (OCI) under an associated Google Key Ring.

 * OpenAPI spec version: 20240501
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as requests from "./lib/request";
import * as models from "./lib/model";
import * as responses from "./lib/response";
import * as client from "./lib/client";
import * as dbmulticloudgcpprovider_waiter from "./lib/dbmulticloudgcpprovider-waiter";
import * as multicloudresourcediscovery_waiter from "./lib/multicloudresourcediscovery-waiter";
import * as oracledbazureblobcontainer_waiter from "./lib/oracledbazureblobcontainer-waiter";
import * as oracledbazureblobmount_waiter from "./lib/oracledbazureblobmount-waiter";
import * as oracledbazureconnector_waiter from "./lib/oracledbazureconnector-waiter";
import * as oracledbazurekey_waiter from "./lib/oracledbazurekey-waiter";
import * as oracledbazurevault_waiter from "./lib/oracledbazurevault-waiter";
import * as oracledbazurevaultassociation_waiter from "./lib/oracledbazurevaultassociation-waiter";
import * as workrequest_waiter from "./lib/workrequest-waiter";

export { models };
export { requests };
export { responses };
export import DbMulticloudGCPProviderClient = client.DbMulticloudGCPProviderClient;
export import DbMulticloudGCPProviderWaiter = dbmulticloudgcpprovider_waiter.DbMulticloudGCPProviderWaiter;
export import MultiCloudResourceDiscoveryClient = client.MultiCloudResourceDiscoveryClient;
export import MultiCloudResourceDiscoveryWaiter = multicloudresourcediscovery_waiter.MultiCloudResourceDiscoveryWaiter;
export import OracleDBAzureBlobContainerClient = client.OracleDBAzureBlobContainerClient;
export import OracleDBAzureBlobContainerWaiter = oracledbazureblobcontainer_waiter.OracleDBAzureBlobContainerWaiter;
export import OracleDBAzureBlobMountClient = client.OracleDBAzureBlobMountClient;
export import OracleDBAzureBlobMountWaiter = oracledbazureblobmount_waiter.OracleDBAzureBlobMountWaiter;
export import OracleDBAzureConnectorClient = client.OracleDBAzureConnectorClient;
export import OracleDBAzureConnectorWaiter = oracledbazureconnector_waiter.OracleDBAzureConnectorWaiter;
export import OracleDbAzureKeyClient = client.OracleDbAzureKeyClient;
export import OracleDbAzureKeyWaiter = oracledbazurekey_waiter.OracleDbAzureKeyWaiter;
export import OracleDbAzureVaultClient = client.OracleDbAzureVaultClient;
export import OracleDbAzureVaultWaiter = oracledbazurevault_waiter.OracleDbAzureVaultWaiter;
export import OracleDbAzureVaultAssociationClient = client.OracleDbAzureVaultAssociationClient;
export import OracleDbAzureVaultAssociationWaiter = oracledbazurevaultassociation_waiter.OracleDbAzureVaultAssociationWaiter;
export import WorkRequestClient = client.WorkRequestClient;
export import WorkRequestWaiter = workrequest_waiter.WorkRequestWaiter;
