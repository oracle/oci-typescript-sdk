/**
 * Fleet Application Management Service API
 * Fleet Application Management Service API. Use this API to for all FAMS related activities.
To manage fleets,view complaince report for the Fleet,scedule patches and other lifecycle activities

 * OpenAPI spec version: 20230831
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details for Credentials using key encryption.
 */
export interface KeyEncryptionCredentialDetails extends model.CredentialDetails {
  /**
   * The value corresponding to the credential
   */
  "value": string;
  /**
   * OCID for the Vault Key that will be used to encrypt/decrypt the value given.
   */
  "keyId": string;
  /**
   * The Vault Key version.
   */
  "keyVersion"?: string;
  /**
   * OCID for the Vault that will be used to fetch key to encrypt/decrypt the value given.
   */
  "vaultId": string;

  "credentialType": string;
}

export namespace KeyEncryptionCredentialDetails {
  export function getJsonObj(
    obj: KeyEncryptionCredentialDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.CredentialDetails.getJsonObj(obj) as KeyEncryptionCredentialDetails)),
      ...{}
    };

    return jsonObj;
  }
  export const credentialType = "KEY_ENCRYPTION";
  export function getDeserializedJsonObj(
    obj: KeyEncryptionCredentialDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.CredentialDetails.getDeserializedJsonObj(obj) as KeyEncryptionCredentialDetails)),
      ...{}
    };

    return jsonObj;
  }
}
