/**
 * Fleet Application Management Service API
 * Fleet Application Management Service API. Use this API to for all FAMS related activities.
To manage fleets,view complaince report for the Fleet,scedule patches and other lifecycle activities

 * OpenAPI spec version: 20230831
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details of the Resource
 */
export interface ComplianceReportResource {
  /**
   * The OCID to identify the resource.
   */
  "resourceId": string;
  /**
   * Display name of the resource.
   */
  "resourceName": string;
  /**
   * Type of the resource.
   */
  "resourceType": string;
  /**
   * TenancyId of the resource.
   */
  "tenancyId"?: string;
  /**
   * Tenancy the resource belongs to.
   */
  "tenancyName"?: string;
  /**
   * Compartment the resource belongs to.
   */
  "compartment"?: string;
  /**
   * Region the resource belongs to.
   */
  "resourceRegion"?: string;
  /**
   * Last known compliance state of fleet.
   */
  "complianceState": model.ComplianceState;
  /**
   * Products assocaited with the Fleet.Only products belonging to managed targets will be shown.
   */
  "products"?: Array<model.ComplianceReportProduct>;
}

export namespace ComplianceReportResource {
  export function getJsonObj(obj: ComplianceReportResource): object {
    const jsonObj = {
      ...obj,
      ...{
        "products": obj.products
          ? obj.products.map(item => {
              return model.ComplianceReportProduct.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ComplianceReportResource): object {
    const jsonObj = {
      ...obj,
      ...{
        "products": obj.products
          ? obj.products.map(item => {
              return model.ComplianceReportProduct.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
