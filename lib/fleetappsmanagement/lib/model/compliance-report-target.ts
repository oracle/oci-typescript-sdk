/**
 * Fleet Application Management Service API
 * Fleet Application Management Service API. Use this API to for all FAMS related activities.
To manage fleets,view complaince report for the Fleet,scedule patches and other lifecycle activities

 * OpenAPI spec version: 20230831
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details of the Patch.
 */
export interface ComplianceReportTarget {
  /**
   * Target Identifier.
   */
  "targetId": string;
  /**
   * Target Name.
   */
  "targetName": string;
  /**
   * Current version.
   */
  "version"?: string;
  /**
   * Last known compliance state of target.
   */
  "complianceState": model.ComplianceState;
  /**
   * Installed Patches for the Target.
   */
  "installedPatches"?: Array<model.ComplianceReportPatchDetail>;
  /**
   * Recommended Patches for the Target.
   */
  "recommendedPatches"?: Array<model.ComplianceReportPatchDetail>;
}

export namespace ComplianceReportTarget {
  export function getJsonObj(obj: ComplianceReportTarget): object {
    const jsonObj = {
      ...obj,
      ...{
        "installedPatches": obj.installedPatches
          ? obj.installedPatches.map(item => {
              return model.ComplianceReportPatchDetail.getJsonObj(item);
            })
          : undefined,
        "recommendedPatches": obj.recommendedPatches
          ? obj.recommendedPatches.map(item => {
              return model.ComplianceReportPatchDetail.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ComplianceReportTarget): object {
    const jsonObj = {
      ...obj,
      ...{
        "installedPatches": obj.installedPatches
          ? obj.installedPatches.map(item => {
              return model.ComplianceReportPatchDetail.getDeserializedJsonObj(item);
            })
          : undefined,
        "recommendedPatches": obj.recommendedPatches
          ? obj.recommendedPatches.map(item => {
              return model.ComplianceReportPatchDetail.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
