/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems. 
For more information, see [Database Management](/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The summary of the Optimizer Statistics Collection operation.
 */
export interface OptimizerStatisticsCollectionOperationSummary {
  /**
   * The ID of the operation. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "id": number;
  /**
   * The name of the operation.
   */
  "operationName": string;
  /**
   * The target object type such as Table, Index, and Partition.
   */
  "target": string;
  /**
   * The name of the job.
   */
  "jobName": string;
  /**
   * The status of the operation such as Completed, and Failed.
   */
  "status": OptimizerStatisticsCollectionOperationSummary.Status;
  /**
   * The start time of the operation.
   */
  "startTime": string;
  /**
   * The end time of the operation.
   */
  "endTime": string;
  /**
   * The time it takes to complete the operation (in seconds). Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "durationInSeconds": number;
  /**
   * The number of objects for which statistics collection is completed. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "completedCount"?: number;
  /**
   * The number of objects for which statistics collection is in progress. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "inProgressCount"?: number;
  /**
   * The number of objects for which statistics collection failed. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "failedCount"?: number;
  /**
   * The number of objects for which statistics collection timed out. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "timedOutCount"?: number;
  /**
   * The total number of objects for which statistics is collected. This number is the sum of all the objects
   * with various statuses: completed, inProgress, failed, and timedOut.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "totalObjectsCount"?: number;
}

export namespace OptimizerStatisticsCollectionOperationSummary {
  export enum Status {
    InProgress = "IN_PROGRESS",
    Completed = "COMPLETED",
    Failed = "FAILED",
    TimedOut = "TIMED_OUT",
    Unknown = "UNKNOWN",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: OptimizerStatisticsCollectionOperationSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(
    obj: OptimizerStatisticsCollectionOperationSummary
  ): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
