/**
 * Speech API
 * The OCI Speech Service harnesses the power of spoken language by allowing developers to easily convert file-based data containing human speech into highly accurate text transcriptions.
 * OpenAPI spec version: 20220101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Use this schema for specifying properties of TTS_2_NATURAL model from Oracle model family.
 */
export interface TtsOracleTts2NaturalModelDetails extends model.TtsOracleModelDetails {
  /**
   * Speaker in whose voice the user wants the output speech to be in.
   * The possible values for {@code voiceId} can be obtained by calling {@link #listVoices(ListVoicesRequest) listVoices} api.
   *
   */
  "voiceId"?: string;
  /**
   * Locale value as per given in [https://datatracker.ietf.org/doc/html/rfc5646]. Default en-US
   * - en-US: English - United States
   * - en-GB: English - Great Britain
   * - es-ES: Spanish - Spain
   * - pt-BR: Portuguese - Brazil
   * - hi-IN: Hindi - India
   * - fr-FR: French - France
   * - it-IT: Italian - Italy
   * - ja-JP: Japanese - Japan
   * - cmn-CN: Mandarin - China
   *
   */
  "languageCode"?: string;

  "modelName": string;
}

export namespace TtsOracleTts2NaturalModelDetails {
  export function getJsonObj(
    obj: TtsOracleTts2NaturalModelDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.TtsOracleModelDetails.getJsonObj(obj) as TtsOracleTts2NaturalModelDetails)),
      ...{}
    };

    return jsonObj;
  }
  export const modelName = "TTS_2_NATURAL";
  export function getDeserializedJsonObj(
    obj: TtsOracleTts2NaturalModelDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.TtsOracleModelDetails.getDeserializedJsonObj(
            obj
          ) as TtsOracleTts2NaturalModelDetails)),
      ...{}
    };

    return jsonObj;
  }
}
