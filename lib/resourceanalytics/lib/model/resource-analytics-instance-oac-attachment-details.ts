/**
 * Resource Analytics API
 * Use the Resource Analytics API to manage Resource Analytics Instances.
 * OpenAPI spec version: 20241031
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
* Additional details needed when attaching the OAC instance.
* <p>
Example: {@code {\"idcsDomainId\":\"ocid...\",\"networkDetails\":{...}, ...}}
* 
*/
export interface ResourceAnalyticsInstanceOacAttachmentDetails {
  /**
   * IDCS domain [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) identifying a stripe and service administrator user.
   */
  "idcsDomainId": string;
  "networkDetails"?: model.ResourceAnalyticsInstanceOacNetworkDetails;
  /**
   * Deprecated. Use {@code networkDetails.subnetId} instead.
   */
  "subnetId"?: string;
  /**
   * Deprecated. Use {@code networkDetails.nsgIds} instead.
   */
  "nsgIds"?: Array<string>;
  /**
   * The Oracle license model that applies to the OAC instance.
   */
  "licenseModel"?: ResourceAnalyticsInstanceOacAttachmentDetails.LicenseModel;
}

export namespace ResourceAnalyticsInstanceOacAttachmentDetails {
  export enum LicenseModel {
    LicenseIncluded = "LICENSE_INCLUDED",
    BringYourOwnLicense = "BRING_YOUR_OWN_LICENSE"
  }

  export function getJsonObj(obj: ResourceAnalyticsInstanceOacAttachmentDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "networkDetails": obj.networkDetails
          ? model.ResourceAnalyticsInstanceOacNetworkDetails.getJsonObj(obj.networkDetails)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(
    obj: ResourceAnalyticsInstanceOacAttachmentDetails
  ): object {
    const jsonObj = {
      ...obj,
      ...{
        "networkDetails": obj.networkDetails
          ? model.ResourceAnalyticsInstanceOacNetworkDetails.getDeserializedJsonObj(
              obj.networkDetails
            )
          : undefined
      }
    };

    return jsonObj;
  }
}
