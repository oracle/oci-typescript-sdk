/**
 * GoldenGate API
 * Use the Oracle Cloud Infrastructure GoldenGate APIs to perform data replication operations.

 * OpenAPI spec version: 20200407
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Required pipeline options to configure the replication process (Extract or Replicat).
 *
 */
export interface ProcessOptions {
  "initialDataLoad": model.InitialDataLoad;
  "replicateSchemaChange": model.ReplicateSchemaChange;
  /**
   * If ENABLED, then the replication process restarts itself upon failure. This option applies when creating or updating a pipeline.
   *
   */
  "shouldRestartOnFailure": ProcessOptions.ShouldRestartOnFailure;
  /**
   * If ENABLED, then the pipeline is started as part of pipeline creation. It uses default mapping. This option only applies when creating a pipeline and is not applicable while updating a pipeline.
   *
   */
  "startUsingDefaultMapping"?: ProcessOptions.StartUsingDefaultMapping;
}

export namespace ProcessOptions {
  export enum ShouldRestartOnFailure {
    Enabled = "ENABLED",
    Disabled = "DISABLED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum StartUsingDefaultMapping {
    Enabled = "ENABLED",
    Disabled = "DISABLED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: ProcessOptions): object {
    const jsonObj = {
      ...obj,
      ...{
        "initialDataLoad": obj.initialDataLoad
          ? model.InitialDataLoad.getJsonObj(obj.initialDataLoad)
          : undefined,
        "replicateSchemaChange": obj.replicateSchemaChange
          ? model.ReplicateSchemaChange.getJsonObj(obj.replicateSchemaChange)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ProcessOptions): object {
    const jsonObj = {
      ...obj,
      ...{
        "initialDataLoad": obj.initialDataLoad
          ? model.InitialDataLoad.getDeserializedJsonObj(obj.initialDataLoad)
          : undefined,
        "replicateSchemaChange": obj.replicateSchemaChange
          ? model.ReplicateSchemaChange.getDeserializedJsonObj(obj.replicateSchemaChange)
          : undefined
      }
    };

    return jsonObj;
  }
}
