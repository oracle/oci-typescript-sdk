/**
 * GoldenGate API
 * Use the Oracle Cloud Infrastructure GoldenGate APIs to perform data replication operations.

 * OpenAPI spec version: 20200407
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Represents the metadata of a Amazon Kinesis Connection.
 *
 */
export interface AmazonKinesisConnection extends model.Connection {
  /**
   * The Amazon Kinesis technology type.
   */
  "technologyType": AmazonKinesisConnection.TechnologyType;
  /**
   * Access key ID to access the Amazon Kinesis.
   *
   */
  "accessKeyId": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the secret access key is stored.
   * Note: When provided, 'secretAccessKey' field must not be provided.
   *
   */
  "secretAccessKeySecretId"?: string;
  /**
   * The endpoint URL of the Amazon Kinesis service.
   * e.g.: 'https://kinesis.us-east-1.amazonaws.com'
   * If not provided, GoldenGate will default to 'https://kinesis.<region>.amazonaws.com'.
   *
   */
  "endpoint"?: string;
  /**
   * The name of the AWS region.
   * If not provided, GoldenGate will default to 'us-west-1'.
   * Note: this property will become mandatory after July 30, 2026.
   *
   */
  "region"?: string;

  "connectionType": string;
}

export namespace AmazonKinesisConnection {
  export enum TechnologyType {
    AmazonKinesis = "AMAZON_KINESIS",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: AmazonKinesisConnection, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.Connection.getJsonObj(obj) as AmazonKinesisConnection)),
      ...{}
    };

    return jsonObj;
  }
  export const connectionType = "AMAZON_KINESIS";
  export function getDeserializedJsonObj(
    obj: AmazonKinesisConnection,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.Connection.getDeserializedJsonObj(obj) as AmazonKinesisConnection)),
      ...{}
    };

    return jsonObj;
  }
}
