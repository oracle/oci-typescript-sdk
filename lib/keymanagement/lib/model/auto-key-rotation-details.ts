/**
 * Vault Key Management API
 * Use the Key Management API to manage vaults and keys. For more information, see [Managing Vaults](/Content/KeyManagement/Tasks/managingvaults.htm) and [Managing Keys](/Content/KeyManagement/Tasks/managingkeys.htm).

 * OpenAPI spec version: release
 * Contact: sparta_kms_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The details of auto rotation schedule for the Key being create updated or imported.
 */
export interface AutoKeyRotationDetails {
  /**
   * The interval of auto key rotation. For auto key rotation the interval should between 60 day and 365 days (1 year). Note: User must specify this parameter when creating a new schedule. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "rotationIntervalInDays"?: number;
  /**
   * A property indicating  scheduled start date expressed as date YYYY-MM-DD String. Example: 2023-04-04T00:00:00Z. The time has no significance when scheduling an auto key rotation as this can be done anytime approximately the scheduled day, KMS ignores the time and replaces it with 00:00, for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z . Note : Today\u2019s date will be used if not specified by customer.
   */
  "timeOfScheduleStart"?: Date;
  /**
   * A property indicating Next estimated scheduled Time, as per the interval, expressed as date YYYY-MM-DD String. Example: {@code 2023-04-04T00:00:00Z}. The time has no significance when scheduling an auto key rotation as this can be done anytime approximately the scheduled day, KMS ignores the time and replaces it with 00:00, for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z.
   */
  "timeOfNextRotation"?: Date;
  /**
   * A property indicating Last rotation Date. Example: {@code 2023-04-04T00:00:00Z}.
   */
  "timeOfLastRotation"?: Date;
  /**
   * The status of last execution of auto key rotation.
   */
  "lastRotationStatus"?: AutoKeyRotationDetails.LastRotationStatus;
  /**
   * The last execution status message of auto key rotation.
   *
   */
  "lastRotationMessage"?: string;
}

export namespace AutoKeyRotationDetails {
  export enum LastRotationStatus {
    Success = "SUCCESS",
    Failed = "FAILED",
    InProgress = "IN_PROGRESS",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: AutoKeyRotationDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: AutoKeyRotationDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
