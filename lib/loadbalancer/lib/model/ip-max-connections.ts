/**
 * Load Balancing API
 * API for the Load Balancing service. Use this API to manage load balancers, backend sets, and related items. For more
information, see [Overview of Load Balancing](/iaas/Content/Balance/Concepts/balanceoverview.htm).

 * OpenAPI spec version: 20170115
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * An object that species the maximum number of connections the listed IPs can make to a listener.
 *
 */
export interface IpMaxConnections {
  /**
   * Each element in the list should be valid IPv4 or IPv6 CIDR Block address.
   * Example: '[\"129.213.176.0/24\", \"150.136.187.0/24\", \"2002::1234:abcd:ffff:c0a8:101/64\"]'
   *
   */
  "ipAddresses": Array<string>;
  /**
   * The maximum number of simultaneous connections that the specified IPs can make to the
   * Listener. IPs without a maxConnections setting can make either defaultMaxConnections
   * simultaneous connections to a listener or, if no defaultMaxConnections is specified, an
   * unlimited number of simultaneous connections to a listener.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maxConnections": number;
}

export namespace IpMaxConnections {
  export function getJsonObj(obj: IpMaxConnections): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: IpMaxConnections): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
