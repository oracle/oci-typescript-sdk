/**
 *
 *
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datasafe/ListAuditProfiles.ts.html |here} to see how to use ListAuditProfilesRequest.
 */
export interface ListAuditProfilesRequest extends common.BaseRequest {
  /**
   * A filter to return only resources that match the specified compartment OCID.
   */
  "compartmentId": string;
  /**
   * Default is false.
   * When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
   *
   */
  "compartmentIdInSubtree"?: boolean;
  /**
   * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED.
   * Setting this to ACCESSIBLE returns only those compartments for which the
   * user has INSPECT permissions directly or indirectly (permissions can be on a
   * resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
   *
   */
  "accessLevel"?: ListAuditProfilesRequest.AccessLevel;
  /**
   * A optional filter to return only resources that match the specified id.
   */
  "auditProfileId"?: string;
  /**
   * A filter to return only items related to a specific target OCID.
   */
  "targetId"?: string;
  /**
   * A filter to return the target database group that matches the specified OCID.
   */
  "targetDatabaseGroupId"?: string;
  /**
   * A optional filter to return only resources that belong to the specified audit profile type.
   */
  "targetType"?: model.AuditProfileTargetType;
  /**
   * A filter to return only resources that match the specified display name.
   *
   */
  "displayName"?: string;
  /**
   * For list pagination. The maximum number of items to return per page in a paginated \"List\" call. For details about how pagination works, see [List Pagination](https://docs.oracle.com/iaas/en-us/iaas/Content/API/Concepts/usingapi.htm#nine).
   */
  "limit"?: number;
  /**
   * For list pagination. The page token representing the page at which to start retrieving results. It is usually retrieved from a previous \"List\" call. For details about how pagination works, see [List Pagination](https://docs.oracle.com/iaas/en-us/iaas/Content/API/Concepts/usingapi.htm#nine).
   */
  "page"?: string;
  /**
   * A optional filter to return only resources that match the specified lifecycle state.
   */
  "lifecycleState"?: model.AuditProfileLifecycleState;
  /**
   * A optional filter to return only resources that match the specified retention configured value.
   */
  "isOverrideGlobalRetentionSetting"?: boolean;
  /**
   * Indicates if you want to continue audit record collection beyond the free limit
   * of one million audit records per month per target database, incurring additional charges.
   * The default value is inherited from the global settings. You can change at the global level
   * or at the target level.
   *
   */
  "isPaidUsageEnabled"?: boolean;
  /**
   * A filter to return only items that have count of audit records collected greater than or equal to the specified value.
   */
  "auditCollectedVolumeGreaterThanOrEqualTo"?: number;
  /**
   * The sort order to use, either ascending (ASC) or descending (DESC).
   */
  "sortOrder"?: ListAuditProfilesRequest.SortOrder;
  /**
   * The field used for sorting. Only one sorting order (sortOrder) can be specified.
   * The default order for TIMECREATED is descending. The default order for DISPLAYNAME is ascending.
   * The DISPLAYNAME sort order is case sensitive.
   *
   */
  "sortBy"?: ListAuditProfilesRequest.SortBy;
  /**
   * Unique identifier for the request.
   */
  "opcRequestId"?: string;
}

export namespace ListAuditProfilesRequest {
  export enum AccessLevel {
    Restricted = "RESTRICTED",
    Accessible = "ACCESSIBLE"
  }

  export enum SortOrder {
    Asc = "ASC",
    Desc = "DESC"
  }

  export enum SortBy {
    Timecreated = "TIMECREATED",
    Displayname = "DISPLAYNAME"
  }
}
