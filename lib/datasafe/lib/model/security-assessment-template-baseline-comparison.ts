/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Provides a list of the differences in a comparison of the security assessment with the template baseline value.
 *
 */
export interface SecurityAssessmentTemplateBaselineComparison {
  /**
   * The OCID of the security assessment that is being compared with a template baseline security assessment.
   */
  "id": string;
  /**
   * The OCID of the security assessment that is set as a template baseline.
   */
  "templateBaselineId": string;
  /**
   * The display name of the security assessment that is set as a template baseline.
   */
  "templateBaselineName"?: string;
  /**
   * The current state of the security assessment comparison.
   */
  "lifecycleState": SecurityAssessmentTemplateBaselineComparison.LifecycleState;
  /**
   * The date and time when the security assessment comparison was created. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
   */
  "timeCreated": Date;
  /**
   * A comparison between findings belonging to Auditing category.
   */
  "auditing"?: Array<model.TemplateBaselineDiffs>;
  /**
   * A comparison between findings belonging to Authorization Control category.
   */
  "authorizationControl"?: Array<model.TemplateBaselineDiffs>;
  /**
   * Comparison between findings belonging to Data Encryption category.
   */
  "dataEncryption"?: Array<model.TemplateBaselineDiffs>;
  /**
   * Comparison between findings belonging to Database Configuration category.
   */
  "dbConfiguration"?: Array<model.TemplateBaselineDiffs>;
  /**
   * Comparison between findings belonging to Fine-Grained Access Control category.
   */
  "fineGrainedAccessControl"?: Array<model.TemplateBaselineDiffs>;
  /**
   * Comparison between findings belonging to Privileges and Roles category.
   */
  "privilegesAndRoles"?: Array<model.TemplateBaselineDiffs>;
  /**
   * Comparison between findings belonging to User Accounts category.
   */
  "userAccounts"?: Array<model.TemplateBaselineDiffs>;
}

export namespace SecurityAssessmentTemplateBaselineComparison {
  export enum LifecycleState {
    InProgress = "IN_PROGRESS",
    Succeeded = "SUCCEEDED",
    Failed = "FAILED",
    Deleted = "DELETED",
    Deleting = "DELETING",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: SecurityAssessmentTemplateBaselineComparison): object {
    const jsonObj = {
      ...obj,
      ...{
        "auditing": obj.auditing
          ? obj.auditing.map(item => {
              return model.TemplateBaselineDiffs.getJsonObj(item);
            })
          : undefined,
        "authorizationControl": obj.authorizationControl
          ? obj.authorizationControl.map(item => {
              return model.TemplateBaselineDiffs.getJsonObj(item);
            })
          : undefined,
        "dataEncryption": obj.dataEncryption
          ? obj.dataEncryption.map(item => {
              return model.TemplateBaselineDiffs.getJsonObj(item);
            })
          : undefined,
        "dbConfiguration": obj.dbConfiguration
          ? obj.dbConfiguration.map(item => {
              return model.TemplateBaselineDiffs.getJsonObj(item);
            })
          : undefined,
        "fineGrainedAccessControl": obj.fineGrainedAccessControl
          ? obj.fineGrainedAccessControl.map(item => {
              return model.TemplateBaselineDiffs.getJsonObj(item);
            })
          : undefined,
        "privilegesAndRoles": obj.privilegesAndRoles
          ? obj.privilegesAndRoles.map(item => {
              return model.TemplateBaselineDiffs.getJsonObj(item);
            })
          : undefined,
        "userAccounts": obj.userAccounts
          ? obj.userAccounts.map(item => {
              return model.TemplateBaselineDiffs.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(
    obj: SecurityAssessmentTemplateBaselineComparison
  ): object {
    const jsonObj = {
      ...obj,
      ...{
        "auditing": obj.auditing
          ? obj.auditing.map(item => {
              return model.TemplateBaselineDiffs.getDeserializedJsonObj(item);
            })
          : undefined,
        "authorizationControl": obj.authorizationControl
          ? obj.authorizationControl.map(item => {
              return model.TemplateBaselineDiffs.getDeserializedJsonObj(item);
            })
          : undefined,
        "dataEncryption": obj.dataEncryption
          ? obj.dataEncryption.map(item => {
              return model.TemplateBaselineDiffs.getDeserializedJsonObj(item);
            })
          : undefined,
        "dbConfiguration": obj.dbConfiguration
          ? obj.dbConfiguration.map(item => {
              return model.TemplateBaselineDiffs.getDeserializedJsonObj(item);
            })
          : undefined,
        "fineGrainedAccessControl": obj.fineGrainedAccessControl
          ? obj.fineGrainedAccessControl.map(item => {
              return model.TemplateBaselineDiffs.getDeserializedJsonObj(item);
            })
          : undefined,
        "privilegesAndRoles": obj.privilegesAndRoles
          ? obj.privilegesAndRoles.map(item => {
              return model.TemplateBaselineDiffs.getDeserializedJsonObj(item);
            })
          : undefined,
        "userAccounts": obj.userAccounts
          ? obj.userAccounts.map(item => {
              return model.TemplateBaselineDiffs.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
