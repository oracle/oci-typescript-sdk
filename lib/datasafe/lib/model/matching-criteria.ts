/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Criteria to either include or exclude target databases from the target database group. These criteria can be based on compartments or tags or a list of target databases. See examples below for more details.
 * Include: Target databases will be added to the target database group if they match at least one of the include criteria.
 * Exclude: Target databases that will be excluded from the target database group (even if they match any of the include criteria).
 *
 */
export interface MatchingCriteria {
  "include": model.Include;
  "exclude"?: model.Exclude;
}

export namespace MatchingCriteria {
  export function getJsonObj(obj: MatchingCriteria): object {
    const jsonObj = {
      ...obj,
      ...{
        "include": obj.include ? model.Include.getJsonObj(obj.include) : undefined,
        "exclude": obj.exclude ? model.Exclude.getJsonObj(obj.exclude) : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: MatchingCriteria): object {
    const jsonObj = {
      ...obj,
      ...{
        "include": obj.include ? model.Include.getDeserializedJsonObj(obj.include) : undefined,
        "exclude": obj.exclude ? model.Exclude.getDeserializedJsonObj(obj.exclude) : undefined
      }
    };

    return jsonObj;
  }
}
