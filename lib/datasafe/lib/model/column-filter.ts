/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Filters that are applied to the data at the column level.
 */
export interface ColumnFilter {
  /**
   * Name of the column on which the filter must be applied.
   */
  "fieldName": string;
  /**
   * Specifies the type of operator that must be applied for example in, eq etc.
   */
  "operator": ColumnFilter.Operator;
  /**
   * An array of expressions based on the operator type. A filter may have one or more expressions.
   */
  "expressions": Array<string>;
  /**
   * Indicates whether the filter is enabled. Values can either be 'true' or 'false'.
   */
  "isEnabled": boolean;
  /**
   * Indicates whether the filter is hidden. Values can either be 'true' or 'false'.
   */
  "isHidden": boolean;
}

export namespace ColumnFilter {
  export enum Operator {
    In = "IN",
    Eq = "EQ",
    EqCs = "EQ_CS",
    Gt = "GT",
    Ge = "GE",
    Lt = "LT",
    Le = "LE",
    And = "AND",
    Or = "OR",
    Ne = "NE",
    Co = "CO",
    CoCs = "CO_CS",
    Not = "NOT",
    NotIn = "NOT_IN",
    Pr = "PR",
    InSet = "IN_SET",
    NotInSet = "NOT_IN_SET",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: ColumnFilter): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ColumnFilter): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
