/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details of aggregation dimensions used for summarizing audit profiles.
 */
export interface AuditProfileDimensions {
  /**
   * Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database,
   * potentially incurring additional charges. The default value is inherited from the global settings.
   * You can change at the global level or at the target level.
   *
   */
  "isPaidUsageEnabled"?: boolean;
  /**
   * The resource type that is represented by the audit profile.
   */
  "targetType"?: string;
  /**
   * The name or the OCID of the resource from which the online month retention setting is sourced. For example a target database group OCID or global.
   */
  "onlineMonthsSource"?: string;
  /**
   * The name or the OCID of the resource from which the offline month retention setting is sourced. For example a target database group OCID or global.
   */
  "offlineMonthsSource"?: string;
  /**
   * The name or the OCID of the resource from which the paid usage setting is sourced. For example a target database group OCID or global.
   */
  "paidUsageSource"?: string;
}

export namespace AuditProfileDimensions {
  export function getJsonObj(obj: AuditProfileDimensions): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: AuditProfileDimensions): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
