/**
 * MySQL Database Service API
 * The API for the MySQL Database Service
 * OpenAPI spec version: 20190415
 * Contact: mysql-cloud-dev_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Backup validation details.
 */
export interface BackupValidationDetails {
  /**
   * The status of backup validation:
   * NOT_VALIDATED (Default): The backup has not been validated.
   * VALIDATED: The backup has been validated successfully.
   * NEEDS_ATTENTION: The backup validation failed due to a transient issue. Validation should be retried.
   * FAILED: The backup cannot be restored.
   *
   */
  "validationStatus"?: BackupValidationDetails.ValidationStatus;
  /**
   * The date and time of the most recent validation performed on the backup.
   */
  "timeLastValidated"?: Date;
  /**
   * The estimated restore duration of the backup.
   */
  "estimatedRestoreDuration"?: string;
  /**
   * Error message if the backup validation has failed.
   */
  "errorMessage"?: string;
  /**
   * Indicates whether the backup has been prepared successfully.
   * PREPARED: The backup is prepared one.
   * NOT_PREPARED: The backup is not prepared.
   *
   */
  "backupPreparationStatus"?: BackupValidationDetails.BackupPreparationStatus;
  "preparedBackupDetails"?: model.PreparedBackupDetails;
}

export namespace BackupValidationDetails {
  export enum ValidationStatus {
    NotValidated = "NOT_VALIDATED",
    Validated = "VALIDATED",
    NeedsAttention = "NEEDS_ATTENTION",
    Failed = "FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum BackupPreparationStatus {
    Prepared = "PREPARED",
    NotPrepared = "NOT_PREPARED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: BackupValidationDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "preparedBackupDetails": obj.preparedBackupDetails
          ? model.PreparedBackupDetails.getJsonObj(obj.preparedBackupDetails)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: BackupValidationDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "preparedBackupDetails": obj.preparedBackupDetails
          ? model.PreparedBackupDetails.getDeserializedJsonObj(obj.preparedBackupDetails)
          : undefined
      }
    };

    return jsonObj;
  }
}
