/**
 * MySQL Database Service API
 * The API for the MySQL Database Service
 * OpenAPI spec version: 20190415
 * Contact: mysql-cloud-dev_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
* Details of Backups such as OCID, description, backupType, and so on.
* <p>
To use any of the API operations, you must be authorized in an IAM
* policy. If you're not authorized, talk to an administrator. If you're an
* administrator who needs to write policies to give users access, see
* [Getting Started with Policies](https://docs.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
* 
*/
export interface BackupSummary {
  /**
   * OCID of the backup.
   */
  "id": string;
  /**
   * A user-supplied display name for the backup.
   */
  "displayName"?: string;
  /**
   * A user-supplied description of the backup.
   */
  "description"?: string;
  /**
   * Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED
   * state for 7 days before permanently deleting it.
   *
   */
  "softDelete"?: model.SoftDelete;
  /**
   * Indicates whether the backup has been prepared successfully.
   *
   */
  "backupPreparationStatus"?: string;
  /**
   * Status of the backup validation.
   */
  "validationStatus"?: string;
  /**
   * The time the backup was created.
   */
  "timeCreated": Date;
  /**
   * The state of the backup.
   */
  "lifecycleState": string;
  /**
   * Additional information about the current lifecycleState.
   */
  "lifecycleDetails"?: string;
  /**
   * The type of backup.
   */
  "backupType": string;
  /**
   * If the backup was created automatically, or by a manual request.
   */
  "creationType": string;
  /**
   * The OCID of the DB System the Backup is associated with.
   */
  "dbSystemId": string;
  /**
   * The OCID of the compartment the backup exists in.
   */
  "compartmentId": string;
  /**
   * Size of the data volume in GiBs. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "dataStorageSizeInGBs"?: number;
  /**
   * The size of the backup in GiBs. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "backupSizeInGBs"?: number;
  /**
   * Number of days to retain this backup. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "retentionInDays"?: number;
  /**
   * The version of the DB System used for backup.
   */
  "mysqlVersion"?: string;
  /**
   * The shape of the DB System instance used for backup.
   */
  "shapeName"?: string;
  /**
   * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
   * Example: {@code {\"bar-key\": \"value\"}}
   *
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * Usage of system tag keys. These predefined keys are scoped to namespaces.
   * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
   *
   */
  "systemTags"?: { [key: string]: { [key: string]: any } };
  /**
   * The OCID of the immediate source DB system backup from which this DB system backup was copied.
   *
   */
  "immediateSourceBackupId"?: string;
  /**
   * The OCID of the original source DB system backup from which this DB system backup was copied.
   *
   */
  "originalSourceBackupId"?: string;
  /**
   * The date and time the DB system backup copy was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
   *
   */
  "timeCopyCreated"?: Date;
  "dbSystemSnapshotSummary"?: model.DbSystemSnapshotSummary;
  "encryptData"?: model.EncryptDataDetails;
}

export namespace BackupSummary {
  export function getJsonObj(obj: BackupSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "dbSystemSnapshotSummary": obj.dbSystemSnapshotSummary
          ? model.DbSystemSnapshotSummary.getJsonObj(obj.dbSystemSnapshotSummary)
          : undefined,
        "encryptData": obj.encryptData
          ? model.EncryptDataDetails.getJsonObj(obj.encryptData)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: BackupSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "dbSystemSnapshotSummary": obj.dbSystemSnapshotSummary
          ? model.DbSystemSnapshotSummary.getDeserializedJsonObj(obj.dbSystemSnapshotSummary)
          : undefined,
        "encryptData": obj.encryptData
          ? model.EncryptDataDetails.getDeserializedJsonObj(obj.encryptData)
          : undefined
      }
    };

    return jsonObj;
  }
}
