/**
 * Identity Domains API
 * Use the Identity Domains API to manage resources within an identity domain, for example, users, dynamic resource groups, groups, and identity providers. For information about managing resources within identity domains, see [Identity and Access Management (with identity domains)](https://docs.oracle.com/iaas/Content/Identity/home.htm).
Use this pattern to construct endpoints for identity domains: `https://<domainURL>/admin/v1/`. See [Finding an Identity Domain URL](https://docs.oracle.com/en-us/iaas/Content/Identity/api-getstarted/locate-identity-domain-url.htm) to locate the domain URL you need.
Use the table of contents and search tool to explore the Identity Domains API.
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Oracle Identity Cloud Service User
 */
export interface ExtensionUserUser {
  /**
   * A Boolean value indicating whether or not the user is federated.
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsCsvAttributeName: Federated
   *  - idcsCsvAttributeNameMappings: [[columnHeaderName:Federated]]
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: readWrite
   *  - idcsRequiresWriteForAccessFlows: true
   *  - required: false
   *  - returned: default
   *  - type: boolean
   *  - uniqueness: none
   */
  "isFederatedUser"?: boolean;
  /**
   * A Boolean value indicating whether or not authentication request by this user should be delegated to a remote app. This value should be true only when the User was originally synced from an app which is enabled for delegated authentication
   * <p>
   **Added In:** 17.4.6
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: immutable
   *  - required: false
   *  - returned: never
   *  - type: boolean
   *  - uniqueness: none
   */
  "isAuthenticationDelegated"?: boolean;
  /**
   * A supplemental status indicating the reason why a user is disabled
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: string
   *  - uniqueness: none
   */
  "status"?: ExtensionUserUser.Status;
  /**
   * Registration provider
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: immutable
   *  - required: false
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "provider"?: ExtensionUserUser.Provider;
  /**
   * User's preferred landing page following login, logout and reset password.
   * <p>
   **Added In:** 2302092332
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "preferredUiLandingPage"?: ExtensionUserUser.PreferredUiLandingPage;
  /**
   * User creation mechanism
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsCsvAttributeNameMappings: [[defaultValue:import]]
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: immutable
   *  - idcsRequiresWriteForAccessFlows: true
   *  - required: false
   *  - returned: request
   *  - type: string
   *  - uniqueness: none
   */
  "creationMechanism"?: ExtensionUserUser.CreationMechanism;
  /**
   * Specifies date time when a User's group membership was last modified.
   * <p>
   **Added In:** 2304270343
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - multiValued: false
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: dateTime
   *  - uniqueness: none
   */
  "groupMembershipLastModified"?: string;
  /**
   * A Boolean value indicating whether or not to hide the getting started page
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: boolean
   *  - uniqueness: none
   */
  "doNotShowGettingStarted"?: boolean;
  /**
   * A Boolean value indicating whether or not to send email notification after creating the user. This attribute is not used in update/replace operations.
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsCsvAttributeNameMappings: [[columnHeaderName:ByPass Notification]]
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: immutable
   *  - idcsRequiresWriteForAccessFlows: true
   *  - required: false
   *  - returned: never
   *  - type: boolean
   *  - uniqueness: none
   */
  "bypassNotification"?: boolean;
  /**
   * A Boolean value indicating whether or not a user is enrolled for account recovery
   * <p>
   **Added In:** 19.1.4
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: boolean
   *  - uniqueness: none
   */
  "isAccountRecoveryEnrolled"?: boolean;
  /**
   * Boolean value to prompt user to setup account recovery during login.
   * <p>
   **Added In:** 19.1.4
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: request
   *  - type: boolean
   *  - uniqueness: none
   */
  "accountRecoveryRequired"?: boolean;
  /**
   * A Boolean value indicating whether to bypass notification and return user token to be used by an external client to control the user flow.
   * <p>
   **Added In:** 18.4.2
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: immutable
   *  - required: false
   *  - returned: never
   *  - type: boolean
   *  - uniqueness: none
   */
  "userFlowControlledByExternalClient"?: boolean;
  /**
   * A Boolean value indicating whether or not group membership is normalized for this user.
   * <p>
   **Deprecated Since: 19.3.3**
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: immutable
   *  - required: false
   *  - returned: never
   *  - type: boolean
   *  - uniqueness: none
   */
  "isGroupMembershipNormalized"?: boolean;
  /**
   * A Boolean value Indicates whether this User's group membership has been sync'ed from Group.members to UsersGroups.
   * <p>
   **Added In:** 19.3.3
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: immutable
   *  - required: false
   *  - returned: never
   *  - type: boolean
   *  - uniqueness: none
   */
  "isGroupMembershipSyncedToUsersGroups"?: boolean;
  /**
   * Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: writeOnly
   *  - required: false
   *  - returned: never
   *  - type: string
   *  - uniqueness: none
   */
  "notificationEmailTemplateId"?: string;
  /**
   * Indicates if User is a Service User
   * <p>
   **Added In:** 2306131901
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsCsvAttributeName: Service User
   *  - idcsCsvAttributeNameMappings: [[columnHeaderName:Service User]]
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: immutable
   *  - required: false
   *  - returned: default
   *  - type: boolean
   *  - uniqueness: none
   */
  "serviceUser"?: boolean;
  /**
   * A list of Support Accounts corresponding to user.
   * <p>
   **Added In:** 2103141444
   * <p>
   **SCIM++ Properties:**
   *  - idcsCompositeKey: [value]
   *  - idcsSearchable: true
   *  - multiValued: true
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: complex
   *  - uniqueness: none
   */
  "supportAccounts"?: Array<model.UserExtSupportAccounts>;
  /**
   * Description:
   * <p>
   **Added In:** 19.2.1
   * <p>
   **SCIM++ Properties:**
   *  - idcsCompositeKey: [value, idcsAppRoleId]
   *  - idcsSearchable: true
   *  - multiValued: true
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: complex
   *
   */
  "idcsAppRolesLimitedToGroups"?: Array<model.UserExtIdcsAppRolesLimitedToGroups>;
  "userToken"?: model.UserExtUserToken;
  "syncedFromApp"?: model.UserExtSyncedFromApp;
  "applicableAuthenticationTargetApp"?: model.UserExtApplicableAuthenticationTargetApp;
  "delegatedAuthenticationTargetApp"?: model.UserExtDelegatedAuthenticationTargetApp;
  /**
   * Accounts assigned to this User. Each value of this attribute refers to an app-specific identity that is owned by this User. Therefore, this attribute is a convenience that allows one to see on each User the Apps to which that User has access.
   * <p>
   **SCIM++ Properties:**
   *  - idcsPii: true
   *  - idcsSearchable: true
   *  - multiValued: true
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: complex
   *  - uniqueness: none
   */
  "accounts"?: Array<model.UserExtAccounts>;
  /**
   * Grants to this User. Each value of this attribute refers to a Grant to this User of some App (and optionally of some entitlement). Therefore, this attribute is a convenience that allows one to see on each User all of the Grants to that User.
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: true
   *  - multiValued: true
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: complex
   *  - uniqueness: none
   */
  "grants"?: Array<model.UserExtGrants>;
  /**
   * A list of all AppRoles to which this User belongs directly, indirectly or implicitly. The User could belong directly because the User is a member of the AppRole, could belong indirectly because the User is a member of a Group that is a member of the AppRole, or could belong implicitly because the AppRole is public.
   * <p>
   **SCIM++ Properties:**
   *  - idcsCompositeKey: [value]
   *  - multiValued: true
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: complex
   *  - uniqueness: none
   */
  "appRoles"?: Array<model.UserExtAppRoles>;
}

export namespace ExtensionUserUser {
  export enum Status {
    PendingVerification = "pendingVerification",
    Verified = "verified",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum Provider {
    Facebook = "facebook",
    Google = "google",
    Idcs = "IDCS",
    Twitter = "twitter",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum PreferredUiLandingPage {
    MyApps = "MyApps",
    MyProfile = "MyProfile",
    OciConsole = "OciConsole",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum CreationMechanism {
    Bulk = "bulk",
    Api = "api",
    Adsync = "adsync",
    Idcsui = "idcsui",
    Import = "import",
    Authsync = "authsync",
    Selfreg = "selfreg",
    Samljit = "samljit",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: ExtensionUserUser): object {
    const jsonObj = {
      ...obj,
      ...{
        "supportAccounts": obj.supportAccounts
          ? obj.supportAccounts.map(item => {
              return model.UserExtSupportAccounts.getJsonObj(item);
            })
          : undefined,
        "idcsAppRolesLimitedToGroups": obj.idcsAppRolesLimitedToGroups
          ? obj.idcsAppRolesLimitedToGroups.map(item => {
              return model.UserExtIdcsAppRolesLimitedToGroups.getJsonObj(item);
            })
          : undefined,
        "userToken": obj.userToken ? model.UserExtUserToken.getJsonObj(obj.userToken) : undefined,
        "syncedFromApp": obj.syncedFromApp
          ? model.UserExtSyncedFromApp.getJsonObj(obj.syncedFromApp)
          : undefined,
        "applicableAuthenticationTargetApp": obj.applicableAuthenticationTargetApp
          ? model.UserExtApplicableAuthenticationTargetApp.getJsonObj(
              obj.applicableAuthenticationTargetApp
            )
          : undefined,
        "delegatedAuthenticationTargetApp": obj.delegatedAuthenticationTargetApp
          ? model.UserExtDelegatedAuthenticationTargetApp.getJsonObj(
              obj.delegatedAuthenticationTargetApp
            )
          : undefined,
        "accounts": obj.accounts
          ? obj.accounts.map(item => {
              return model.UserExtAccounts.getJsonObj(item);
            })
          : undefined,
        "grants": obj.grants
          ? obj.grants.map(item => {
              return model.UserExtGrants.getJsonObj(item);
            })
          : undefined,
        "appRoles": obj.appRoles
          ? obj.appRoles.map(item => {
              return model.UserExtAppRoles.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ExtensionUserUser): object {
    const jsonObj = {
      ...obj,
      ...{
        "supportAccounts": obj.supportAccounts
          ? obj.supportAccounts.map(item => {
              return model.UserExtSupportAccounts.getDeserializedJsonObj(item);
            })
          : undefined,
        "idcsAppRolesLimitedToGroups": obj.idcsAppRolesLimitedToGroups
          ? obj.idcsAppRolesLimitedToGroups.map(item => {
              return model.UserExtIdcsAppRolesLimitedToGroups.getDeserializedJsonObj(item);
            })
          : undefined,
        "userToken": obj.userToken
          ? model.UserExtUserToken.getDeserializedJsonObj(obj.userToken)
          : undefined,
        "syncedFromApp": obj.syncedFromApp
          ? model.UserExtSyncedFromApp.getDeserializedJsonObj(obj.syncedFromApp)
          : undefined,
        "applicableAuthenticationTargetApp": obj.applicableAuthenticationTargetApp
          ? model.UserExtApplicableAuthenticationTargetApp.getDeserializedJsonObj(
              obj.applicableAuthenticationTargetApp
            )
          : undefined,
        "delegatedAuthenticationTargetApp": obj.delegatedAuthenticationTargetApp
          ? model.UserExtDelegatedAuthenticationTargetApp.getDeserializedJsonObj(
              obj.delegatedAuthenticationTargetApp
            )
          : undefined,
        "accounts": obj.accounts
          ? obj.accounts.map(item => {
              return model.UserExtAccounts.getDeserializedJsonObj(item);
            })
          : undefined,
        "grants": obj.grants
          ? obj.grants.map(item => {
              return model.UserExtGrants.getDeserializedJsonObj(item);
            })
          : undefined,
        "appRoles": obj.appRoles
          ? obj.appRoles.map(item => {
              return model.UserExtAppRoles.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
