/**
 * Identity Domains API
 * Use the Identity Domains API to manage resources within an identity domain, for example, users, dynamic resource groups, groups, and identity providers. For information about managing resources within identity domains, see [Identity and Access Management (with identity domains)](https://docs.oracle.com/iaas/Content/Identity/home.htm).
Use this pattern to construct endpoints for identity domains: `https://<domainURL>/admin/v1/`. See [Finding an Identity Domain URL](https://docs.oracle.com/en-us/iaas/Content/Identity/api-getstarted/locate-identity-domain-url.htm) to locate the domain URL you need.
Use the table of contents and search tool to explore the Identity Domains API.
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * This extension defines the Enterprise App related attributes.
 */
export interface AppExtensionEnterpriseAppApp {
  /**
   * A list of AppResources of this App.
   * <p>
   **Added In:** 19.2.1
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: true
   *  - idcsCompositeKey: [value]
   *  - idcsSearchable: true
   *  - multiValued: true
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: complex
   */
  "appResources"?: Array<model.AppAppResources>;
  "denyAuthzPolicy"?: model.AppDenyAuthzPolicy;
  "allowAuthzPolicy"?: model.AppAllowAuthzPolicy;
  /**
   * Allow Authz policy decision expiry time in seconds.
   * <p>
   **Added In:** 19.2.1
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 3600
   *  - idcsMinValue: 0
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "allowAuthzDecisionTTL"?: number;
  /**
   * Deny Authz policy decision expiry time in seconds.
   * <p>
   **Added In:** 19.2.1
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 3600
   *  - idcsMinValue: 0
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "denyAuthzDecisionTTL"?: number;
}

export namespace AppExtensionEnterpriseAppApp {
  export function getJsonObj(obj: AppExtensionEnterpriseAppApp): object {
    const jsonObj = {
      ...obj,
      ...{
        "appResources": obj.appResources
          ? obj.appResources.map(item => {
              return model.AppAppResources.getJsonObj(item);
            })
          : undefined,
        "denyAuthzPolicy": obj.denyAuthzPolicy
          ? model.AppDenyAuthzPolicy.getJsonObj(obj.denyAuthzPolicy)
          : undefined,
        "allowAuthzPolicy": obj.allowAuthzPolicy
          ? model.AppAllowAuthzPolicy.getJsonObj(obj.allowAuthzPolicy)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: AppExtensionEnterpriseAppApp): object {
    const jsonObj = {
      ...obj,
      ...{
        "appResources": obj.appResources
          ? obj.appResources.map(item => {
              return model.AppAppResources.getDeserializedJsonObj(item);
            })
          : undefined,
        "denyAuthzPolicy": obj.denyAuthzPolicy
          ? model.AppDenyAuthzPolicy.getDeserializedJsonObj(obj.denyAuthzPolicy)
          : undefined,
        "allowAuthzPolicy": obj.allowAuthzPolicy
          ? model.AppAllowAuthzPolicy.getDeserializedJsonObj(obj.allowAuthzPolicy)
          : undefined
      }
    };

    return jsonObj;
  }
}
