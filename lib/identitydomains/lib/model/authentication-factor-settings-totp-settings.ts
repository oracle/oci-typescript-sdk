/**
 * Identity Domains API
 * Use the Identity Domains API to manage resources within an identity domain, for example, users, dynamic resource groups, groups, and identity providers. For information about managing resources within identity domains, see [Identity and Access Management (with identity domains)](https://docs.oracle.com/iaas/Content/Identity/home.htm).
Use this pattern to construct endpoints for identity domains: `https://<domainURL>/admin/v1/`. See [Finding an Identity Domain URL](https://docs.oracle.com/en-us/iaas/Content/Identity/api-getstarted/locate-identity-domain-url.htm) to locate the domain URL you need.
Use the table of contents and search tool to explore the Identity Domains API.
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
 * <p>
 **SCIM++ Properties:**
 *  - idcsSearchable: false
 *  - multiValued: false
 *  - mutability: readWrite
 *  - required: true
 *  - returned: default
 *  - type: complex
 *  - uniqueness: none
 */
export interface AuthenticationFactorSettingsTotpSettings {
  /**
   * The hashing algorithm to be used to calculate a One-Time Passcode. By default, the system uses SHA1.
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "hashingAlgorithm": AuthenticationFactorSettingsTotpSettings.HashingAlgorithm;
  /**
   * Exact length of the One-Time Passcode that the system should generate
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 10
   *  - idcsMinValue: 4
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "passcodeLength": number;
  /**
   * The duration of time (in days) after which the shared secret has to be refreshed
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 999
   *  - idcsMinValue: 30
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "keyRefreshIntervalInDays": number;
  /**
   * Time (in secs) to be used as the time step
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 300
   *  - idcsMinValue: 30
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "timeStepInSecs": number;
  /**
   * The tolerance/step-size that the system should use when validating a One-Time Passcode
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 3
   *  - idcsMinValue: 2
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "timeStepTolerance": number;
  /**
   * The period of time (in minutes) for which a One-Time Passcode that the system sends by Short Message Service (SMS) or by voice remains valid
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 60
   *  - idcsMinValue: 2
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "smsOtpValidityDurationInMins": number;
  /**
   * The period of time (in seconds) that a JSON Web Token (JWT) is valid
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 99999
   *  - idcsMinValue: 30
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "jwtValidityDurationInSecs": number;
  /**
   * Exact length of the Short Message Service (SMS) One-Time Passcode
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 10
   *  - idcsMinValue: 4
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "smsPasscodeLength": number;
  /**
   * The period of time (in minutes) that a one-time passcode remains valid that the system sends by email.
   * <p>
   **Added In:** 18.1.2
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 60
   *  - idcsMinValue: 2
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "emailOtpValidityDurationInMins": number;
  /**
   * Exact length of the email one-time passcode.
   * <p>
   **Added In:** 18.1.2
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 10
   *  - idcsMinValue: 4
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "emailPasscodeLength": number;
}

export namespace AuthenticationFactorSettingsTotpSettings {
  export enum HashingAlgorithm {
    Sha1 = "SHA1",
    Sha256 = "SHA256",
    Sha384 = "SHA384",
    Sha512 = "SHA512",
    Md5 = "MD5",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: AuthenticationFactorSettingsTotpSettings): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: AuthenticationFactorSettingsTotpSettings): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
