/**
 * Identity Domains API
 * Use the Identity Domains API to manage resources within an identity domain, for example, users, dynamic resource groups, groups, and identity providers. For information about managing resources within identity domains, see [Identity and Access Management (with identity domains)](https://docs.oracle.com/iaas/Content/Identity/home.htm).
Use this pattern to construct endpoints for identity domains: `https://<domainURL>/admin/v1/`. See [Finding an Identity Domain URL](https://docs.oracle.com/en-us/iaas/Content/Identity/api-getstarted/locate-identity-domain-url.htm) to locate the domain URL you need.
Use the table of contents and search tool to explore the Identity Domains API.
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Settings related to compliance, Personal Identification Number (PIN) policy, and so on
 * <p>
 **SCIM++ Properties:**
 *  - idcsSearchable: false
 *  - multiValued: false
 *  - mutability: readWrite
 *  - required: true
 *  - returned: default
 *  - type: complex
 *  - uniqueness: none
 */
export interface AuthenticationFactorSettingsClientAppSettings {
  /**
   * Minimum length of the Personal Identification Number (PIN)
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 10
   *  - idcsMinValue: 6
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "minPinLength": number;
  /**
   * The maximum number of login failures that the system will allow before raising a warning and sending an alert via email
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 10
   *  - idcsMinValue: 0
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maxFailuresBeforeWarning": number;
  /**
   * The maximum number of times that a particular user can fail to login before the system locks that user out of the service
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 10
   *  - idcsMinValue: 5
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maxFailuresBeforeLockout": number;
  /**
   * The period of time in seconds that the system will lock a user out of the service after that user exceeds the maximum number of login failures
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 86400
   *  - idcsMinValue: 30
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "initialLockoutPeriodInSecs": number;
  /**
   * The pattern of escalation that the system follows, in locking a particular user out of the service.
   * <p>
   **SCIM++ Properties:**
   *  - idcsCanonicalValueSourceFilter: attrName eq \"lockoutEscalationPattern\" and attrValues.value eq \"$(lockoutEscalationPattern)\"
   *  - idcsCanonicalValueSourceResourceType: AllowedValue
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "lockoutEscalationPattern": string;
  /**
   * The maximum period of time that the system will lock a particular user out of the service regardless of what the configured pattern of escalation would otherwise dictate
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 86400
   *  - idcsMinValue: 30
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maxLockoutIntervalInSecs": number;
  /**
   * Indicates which algorithm the system will use to sign requests
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "requestSigningAlgo": AuthenticationFactorSettingsClientAppSettings.RequestSigningAlgo;
  /**
   * The period of time in days after which a client should refresh its policy by re-reading that policy from the server
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 999
   *  - idcsMinValue: 1
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "policyUpdateFreqInDays": number;
  /**
   * The size of the key that the system uses to generate the public-private key pair
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 4000
   *  - idcsMinValue: 32
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "keyPairLength": number;
  /**
   * Indicates what protection policy that the system applies on a device. By default, the value is NONE, which indicates that the system applies no protection policy. A value of APP_PIN indicates that the system requires a Personal Identification Number (PIN). A value of DEVICE_BIOMETRIC_OR_APP_PIN indicates that either a PIN or a biometric authentication factor is required.
   * <p>
   **SCIM++ Properties:**
   *  - idcsCanonicalValueSourceFilter: attrName eq \"deviceProtectionPolicy\" and attrValues.value eq \"$(deviceProtectionPolicy)\"
   *  - idcsCanonicalValueSourceResourceType: AllowedValue
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "deviceProtectionPolicy": string;
  /**
   * If true, indicates that the system should require the user to unlock the client app for each request. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: boolean
   *  - uniqueness: none
   */
  "unlockAppForEachRequestEnabled": boolean;
  /**
   * If true, indicates that the system should require the user to unlock the client App whenever the App is started. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: boolean
   *  - uniqueness: none
   */
  "unlockOnAppStartEnabled": boolean;
  /**
   * Specifies the period of time in seconds after which the client App should require the user to unlock the App. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor. A value of zero means that it is disabled.
   * <p>
   **SCIM++ Properties:**
   *  - idcsMaxValue: 9999999
   *  - idcsMinValue: 0
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "unlockAppIntervalInSecs": number;
  /**
   * Indicates the type of encoding that the system should use to generate a shared secret
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "sharedSecretEncoding": AuthenticationFactorSettingsClientAppSettings.SharedSecretEncoding;
  /**
   * If true, indicates that the system should require the user to unlock the client App, when the client App comes to the foreground in the display of the device. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: boolean
   *  - uniqueness: none
   */
  "unlockOnAppForegroundEnabled": boolean;
}

export namespace AuthenticationFactorSettingsClientAppSettings {
  export enum RequestSigningAlgo {
    Sha256withRsa = "SHA256withRSA",
    Sha384withRsa = "SHA384withRSA",
    Sha512withRsa = "SHA512withRSA",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum SharedSecretEncoding {
    Base32 = "Base32",
    Base64 = "Base64",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: AuthenticationFactorSettingsClientAppSettings): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(
    obj: AuthenticationFactorSettingsClientAppSettings
  ): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
