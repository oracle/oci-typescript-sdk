/**
 * Identity Domains API
 * Use the Identity Domains API to manage resources within an identity domain, for example, users, dynamic resource groups, groups, and identity providers. For information about managing resources within identity domains, see [Identity and Access Management (with identity domains)](https://docs.oracle.com/iaas/Content/Identity/home.htm).
Use this pattern to construct endpoints for identity domains: `https://<domainURL>/admin/v1/`. See [Finding an Identity Domain URL](https://docs.oracle.com/en-us/iaas/Content/Identity/api-getstarted/locate-identity-domain-url.htm) to locate the domain URL you need.
Use the table of contents and search tool to explore the Identity Domains API.
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * This extension provides attributes for Form-Fill facet of AppTemplate
 */
export interface AppExtensionFormFillAppTemplateAppTemplate {
  /**
   * Type of the FormFill application like WebApplication, MainFrameApplication, WindowsApplication. Initially, we will support only WebApplication.
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "formType"?: AppExtensionFormFillAppTemplateAppTemplate.FormType;
  /**
   * Credential Sharing Group to which this form-fill application belongs.
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "formCredentialSharingGroupID"?: string;
  /**
   * If true, indicates that system is allowed to show the password in plain-text for this account after re-authentication.
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: boolean
   *  - uniqueness: none
   */
  "revealPasswordOnForm"?: boolean;
  /**
   * Format for generating a username.  This value can be Username or Email Address; any other value will be treated as a custom expression.  A custom expression may combine 'concat' and 'substring' operations with literals and with any attribute of the Oracle Identity Cloud Service user.
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsPii: true
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "userNameFormTemplate"?: string;
  /**
   * Indicates the custom expression, which can combine concat and substring operations with literals and with any attribute of the Oracle Identity Cloud Service User
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "userNameFormExpression"?: string;
  /**
   * Indicates how FormFill obtains the username and password of the account that FormFill will use to sign into the target App.
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "formCredMethod"?: AppExtensionFormFillAppTemplateAppTemplate.FormCredMethod;
  /**
   * FormFill Application Configuration CLOB which has to be maintained in Form-Fill APP for legacy code to do Form-Fill injection
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "configuration"?: string;
  /**
   * If true, indicates that each of the Form-Fill-related attributes that can be inherited from the template actually will be inherited from the template. If false, indicates that the AppTemplate disabled inheritance for these Form-Fill-related attributes.
   * <p>
   **Added In:** 17.4.2
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: boolean
   *  - uniqueness: none
   */
  "syncFromTemplate"?: boolean;
  /**
   * A list of application-formURLs that FormFill should match against any formUrl that the user-specifies when signing in to the target service.  Each item in the list also indicates how FormFill should interpret that formUrl.
   * <p>
   **SCIM++ Properties:**
   *  - idcsCompositeKey: [formUrl]
   *  - multiValued: true
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: complex
   *  - uniqueness: none
   */
  "formFillUrlMatch"?: Array<model.AppFormFillUrlMatch>;
}

export namespace AppExtensionFormFillAppTemplateAppTemplate {
  export enum FormType {
    WebApplication = "WebApplication",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum FormCredMethod {
    AdminSetsCredentials = "ADMIN_SETS_CREDENTIALS",
    AdminSetsSharedCredentials = "ADMIN_SETS_SHARED_CREDENTIALS",
    UserSetsPasswordOnly = "USER_SETS_PASSWORD_ONLY",
    UserSetsCredentials = "USER_SETS_CREDENTIALS",
    SsoCredentialsAsAppCredentials = "SSO_CREDENTIALS_AS_APP_CREDENTIALS",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: AppExtensionFormFillAppTemplateAppTemplate): object {
    const jsonObj = {
      ...obj,
      ...{
        "formFillUrlMatch": obj.formFillUrlMatch
          ? obj.formFillUrlMatch.map(item => {
              return model.AppFormFillUrlMatch.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: AppExtensionFormFillAppTemplateAppTemplate): object {
    const jsonObj = {
      ...obj,
      ...{
        "formFillUrlMatch": obj.formFillUrlMatch
          ? obj.formFillUrlMatch.map(item => {
              return model.AppFormFillUrlMatch.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
