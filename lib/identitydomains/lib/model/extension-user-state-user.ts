/**
 * Identity Domains API
 * Use the Identity Domains API to manage resources within an identity domain, for example, users, dynamic resource groups, groups, and identity providers. For information about managing resources within identity domains, see [Identity and Access Management (with identity domains)](https://docs.oracle.com/iaas/Content/Identity/home.htm).
Use this pattern to construct endpoints for identity domains: `https://<domainURL>/admin/v1/`. See [Finding an Identity Domain URL](https://docs.oracle.com/en-us/iaas/Content/Identity/api-getstarted/locate-identity-domain-url.htm) to locate the domain URL you need.
Use the table of contents and search tool to explore the Identity Domains API.
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
 */
export interface ExtensionUserStateUser {
  /**
   * The last successful login date.
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: true
   *  - idcsAllowUpdatesInReadOnlyMode: true
   *  - multiValued: false
   *  - mutability: readOnly
   *  - idcsRequiresWriteForAccessFlows: true
   *  - required: false
   *  - returned: request
   *  - type: dateTime
   *  - uniqueness: none
   */
  "lastSuccessfulLoginDate"?: string;
  /**
   * The previous successful login date.
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readOnly
   *  - idcsRequiresWriteForAccessFlows: true
   *  - required: false
   *  - returned: request
   *  - type: dateTime
   *  - uniqueness: none
   */
  "previousSuccessfulLoginDate"?: string;
  /**
   * The last failed login date.
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - idcsAllowUpdatesInReadOnlyMode: true
   *  - multiValued: false
   *  - mutability: readOnly
   *  - idcsRequiresWriteForAccessFlows: true
   *  - required: false
   *  - returned: request
   *  - type: dateTime
   *  - uniqueness: none
   */
  "lastFailedLoginDate"?: string;
  /**
   * The number of failed login attempts. The value is reset to 0 after a successful login.
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - idcsAllowUpdatesInReadOnlyMode: true
   *  - multiValued: false
   *  - mutability: readOnly
   *  - idcsRequiresWriteForAccessFlows: true
   *  - idcsRequiresImmediateReadAfterWriteForAccessFlows: true
   *  - required: false
   *  - returned: request
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "loginAttempts"?: number;
  /**
   * The number of failed recovery attempts. The value is reset to 0 after a successful login.
   * <p>
   **Added In:** 19.1.4
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readOnly
   *  - idcsRequiresWriteForAccessFlows: true
   *  - required: false
   *  - returned: request
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "recoveryAttempts"?: number;
  /**
   * The number of failed account recovery enrollment attempts.
   * <p>
   **Added In:** 19.1.4
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "recoveryEnrollAttempts"?: number;
  /**
   * The maximum number of concurrent sessions for a user.
   * <p>
   **Added In:** 20.1.3
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsMaxValue: 999
   *  - idcsMinValue: 1
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: false
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maxConcurrentSessions"?: number;
  "recoveryLocked"?: model.UserExtRecoveryLocked;
  "locked"?: model.UserExtLocked;
}

export namespace ExtensionUserStateUser {
  export function getJsonObj(obj: ExtensionUserStateUser): object {
    const jsonObj = {
      ...obj,
      ...{
        "recoveryLocked": obj.recoveryLocked
          ? model.UserExtRecoveryLocked.getJsonObj(obj.recoveryLocked)
          : undefined,
        "locked": obj.locked ? model.UserExtLocked.getJsonObj(obj.locked) : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ExtensionUserStateUser): object {
    const jsonObj = {
      ...obj,
      ...{
        "recoveryLocked": obj.recoveryLocked
          ? model.UserExtRecoveryLocked.getDeserializedJsonObj(obj.recoveryLocked)
          : undefined,
        "locked": obj.locked ? model.UserExtLocked.getDeserializedJsonObj(obj.locked) : undefined
      }
    };

    return jsonObj;
  }
}
