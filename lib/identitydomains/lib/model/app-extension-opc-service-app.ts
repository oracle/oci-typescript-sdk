/**
 * Identity Domains API
 * Use the Identity Domains API to manage resources within an identity domain, for example, users, dynamic resource groups, groups, and identity providers. For information about managing resources within identity domains, see [Identity and Access Management (with identity domains)](https://docs.oracle.com/iaas/Content/Identity/home.htm).
Use this pattern to construct endpoints for identity domains: `https://<domainURL>/admin/v1/`. See [Finding an Identity Domain URL](https://docs.oracle.com/en-us/iaas/Content/Identity/api-getstarted/locate-identity-domain-url.htm) to locate the domain URL you need.
Use the table of contents and search tool to explore the Identity Domains API.
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * This extension defines attributes specific to Apps that represent instances of an Oracle Public Cloud (OPC) service.
 */
export interface AppExtensionOpcServiceApp {
  /**
   * This value specifies the unique identifier assigned to an instance of an Oracle Public Cloud service app.
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: true
   *  - multiValued: false
   *  - mutability: immutable
   *  - required: false
   *  - returned: default
   *  - type: string
   *  - uniqueness: server
   */
  "serviceInstanceIdentifier"?: string;
  /**
   * This value identifies the OPC region in which the service is running.
   * <p>
   **Added In:** 19.1.4
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: string
   *  - uniqueness: none
   */
  "region"?: string;
  /**
   * Current Federation Mode
   * <p>
   **Added In:** 18.2.6
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: string
   */
  "currentFederationMode"?: AppExtensionOpcServiceApp.CurrentFederationMode;
  /**
   * Current Synchronization Mode
   * <p>
   **Added In:** 18.2.6
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: string
   */
  "currentSynchronizationMode"?: AppExtensionOpcServiceApp.CurrentSynchronizationMode;
  /**
   * Next Federation Mode
   * <p>
   **Added In:** 18.2.6
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: string
   */
  "nextFederationMode"?: AppExtensionOpcServiceApp.NextFederationMode;
  /**
   * Next Synchronization Mode
   * <p>
   **Added In:** 18.2.6
   * <p>
   **SCIM++ Properties:**
   *  - caseExact: false
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: string
   */
  "nextSynchronizationMode"?: AppExtensionOpcServiceApp.NextSynchronizationMode;
  /**
   * If true, indicates that enablement is in progress started but not completed
   * <p>
   **Added In:** 18.2.6
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readOnly
   *  - required: false
   *  - returned: request
   *  - type: boolean
   */
  "enablingNextFedSyncModes"?: boolean;
}

export namespace AppExtensionOpcServiceApp {
  export enum CurrentFederationMode {
    None = "None",
    AppAsServiceProvider = "AppAsServiceProvider",
    AppAsIdentityProvider = "AppAsIdentityProvider",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum CurrentSynchronizationMode {
    None = "None",
    AppAsTarget = "AppAsTarget",
    AppAsSource = "AppAsSource",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum NextFederationMode {
    None = "None",
    AppAsServiceProvider = "AppAsServiceProvider",
    AppAsIdentityProvider = "AppAsIdentityProvider",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum NextSynchronizationMode {
    None = "None",
    AppAsTarget = "AppAsTarget",
    AppAsSource = "AppAsSource",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: AppExtensionOpcServiceApp): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: AppExtensionOpcServiceApp): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
