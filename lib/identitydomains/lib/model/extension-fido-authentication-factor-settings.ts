/**
 * Identity Domains API
 * Use the Identity Domains API to manage resources within an identity domain, for example, users, dynamic resource groups, groups, and identity providers. For information about managing resources within identity domains, see [Identity and Access Management (with identity domains)](https://docs.oracle.com/iaas/Content/Identity/home.htm).
Use this pattern to construct endpoints for identity domains: `https://<domainURL>/admin/v1/`. See [Finding an Identity Domain URL](https://docs.oracle.com/en-us/iaas/Content/Identity/api-getstarted/locate-identity-domain-url.htm) to locate the domain URL you need.
Use the table of contents and search tool to explore the Identity Domains API.
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
 */
export interface ExtensionFidoAuthenticationFactorSettings {
  /**
   * Attribute used to define the type of attestation required.
   * <p>
   **Added In:** 2009232244
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "attestation": ExtensionFidoAuthenticationFactorSettings.Attestation;
  /**
   * Attribute used to define authenticator selection attachment.
   * <p>
   **Added In:** 2009232244
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "authenticatorSelectionAttachment": ExtensionFidoAuthenticationFactorSettings.AuthenticatorSelectionAttachment;
  /**
   * Attribute used to define authenticator selection verification.
   * <p>
   **Added In:** 2009232244
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "authenticatorSelectionUserVerification": ExtensionFidoAuthenticationFactorSettings.AuthenticatorSelectionUserVerification;
  /**
   * Attribute used to define authenticator selection resident key requirement.
   * <p>
   **Added In:** 2009232244
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "authenticatorSelectionResidentKey": ExtensionFidoAuthenticationFactorSettings.AuthenticatorSelectionResidentKey;
  /**
   * Timeout for the fido authentication to complete
   * <p>
   **Added In:** 2009232244
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - idcsMaxValue: 600000
   *  - idcsMinValue: 10000
   *  - required: true
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "timeout": number;
  /**
   * Flag used to indicate authenticator selection is required or not
   * <p>
   **Added In:** 2009232244
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: boolean
   *  - uniqueness: none
   */
  "authenticatorSelectionRequireResidentKey": boolean;
  /**
   * List of server supported public key algorithms
   * <p>
   **Added In:** 2009232244
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: true
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: string
   *  - uniqueness: none
   */
  "publicKeyTypes": Array<ExtensionFidoAuthenticationFactorSettings.PublicKeyTypes>;
  /**
   * Flag used to indicate whether we need to restrict creation of multiple credentials in same authenticator
   * <p>
   **Added In:** 2009232244
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - required: true
   *  - returned: default
   *  - type: boolean
   *  - uniqueness: none
   */
  "excludeCredentials": boolean;
  /**
   * Number of domain levels Oracle Identity Cloud Service should use for origin comparision
   * <p>
   **Added In:** 2109020413
   * <p>
   **SCIM++ Properties:**
   *  - idcsSearchable: false
   *  - multiValued: false
   *  - mutability: readWrite
   *  - idcsMaxValue: 2
   *  - idcsMinValue: 0
   *  - required: false
   *  - returned: default
   *  - type: integer
   *  - uniqueness: none Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "domainValidationLevel"?: number;
}

export namespace ExtensionFidoAuthenticationFactorSettings {
  export enum Attestation {
    None = "NONE",
    Direct = "DIRECT",
    Indirect = "INDIRECT",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum AuthenticatorSelectionAttachment {
    Platform = "PLATFORM",
    CrossPlatform = "CROSS-PLATFORM",
    Both = "BOTH",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum AuthenticatorSelectionUserVerification {
    Required = "REQUIRED",
    Preferred = "PREFERRED",
    Discouraged = "DISCOURAGED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum AuthenticatorSelectionResidentKey {
    Required = "REQUIRED",
    Preferred = "PREFERRED",
    Discouraged = "DISCOURAGED",
    None = "NONE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum PublicKeyTypes {
    Rs1 = "RS1",
    Rs256 = "RS256",
    Es256 = "ES256",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: ExtensionFidoAuthenticationFactorSettings): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ExtensionFidoAuthenticationFactorSettings): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
