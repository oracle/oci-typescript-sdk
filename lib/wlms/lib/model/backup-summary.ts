/**
 * WebLogic Management Service API
 * WebLogic Management Service is an OCI service that enables a unified view and management of WebLogic domains
in Oracle Cloud Infrastructure. Features include on-demand patching of WebLogic domains, rollback of the
last applied patch, discovery and management of WebLogic instances on a compute host.

 * OpenAPI spec version: 20241101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The information of a backup for the server.
 *
 */
export interface BackupSummary {
  /**
   * The unique identifier of the backup.
   * <p>
   **Note:** Not an [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
   *
   */
  "id": string;
  /**
   * The type of the backup.
   */
  "type": model.BackupType;
  /**
   * The managed instance ID of the server for which the backup was created.
   */
  "managedInstanceId"?: string;
  /**
   * The location of the backup. For backups of type LOCAL_FILE this is the absolute path of the backup file.
   */
  "backupLocation": string;
  /**
   * The type of content of the backup.
   */
  "contentType"?: model.BackupContentType;
  /**
    * The date and time when the backup was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
* <p>
Example: {@code 2016-08-25T21:10:29.600Z}
* 
    */
  "timeCreated"?: Date;
}

export namespace BackupSummary {
  export function getJsonObj(obj: BackupSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: BackupSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
