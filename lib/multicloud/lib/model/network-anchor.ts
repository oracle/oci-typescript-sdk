/**
 * Oracle Multicloud API
 * Use the Oracle Multicloud API to retrieve resource anchors and network anchors, and the metadata mappings related a Cloud Service Provider. For more information, see <link to docs>.
 * OpenAPI spec version: 20180828
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
* A NetworkAnchor is a description of a NetworkAnchor.
* <p>
To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to
* an administrator. If you're an administrator who needs to write policies to give users access, see
* [Getting Started with Policies](https://docs.oracle.com/iaas/Content/Identity/policiesgs/get-started-with-policies.htm).
* 
*/
export interface NetworkAnchor {
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the NetworkAnchor.
   */
  "id": string;
  /**
   * A user-friendly name. Does not have to be unique, and it's changeable.
   */
  "displayName": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
   */
  "compartmentId": string;
  /**
   * OCI resource anchor Id (OCID).
   */
  "resourceAnchorId": string;
  /**
    * The date and time the NetworkAnchor was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
* <p>
Example: {@code 2016-08-25T21:10:29.600Z}
* 
    */
  "timeCreated": Date;
  /**
    * The date and time the NetworkAnchor was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
* <p>
Example: {@code 2016-08-25T21:10:29.600Z}
* 
    */
  "timeUpdated"?: Date;
  /**
   * The current state of the NetworkAnchor.
   */
  "lifecycleState": NetworkAnchor.LifecycleState;
  /**
   * A message that describes the current state of the NetworkAnchor in more detail. For example,
   * can be used to provide actionable information for a resource in the Failed state.
   *
   */
  "lifecycleDetails"?: string;
  /**
    * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
* For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
* <p>
Example: {@code {\"Department\": \"Finance\"}}
* 
    */
  "freeformTags": { [key: string]: string };
  /**
    * Defined tags for this resource. Each key is predefined and scoped to a namespace.
* For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
* <p>
Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
* 
    */
  "definedTags": { [key: string]: { [key: string]: any } };
  /**
    * System tags for this resource. Each key is predefined and scoped to a namespace.
* <p>
Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
* 
    */
  "systemTags"?: { [key: string]: { [key: string]: any } };
  /**
   * AUTO_BIND - when passed compartment will be created on-behalf of customer and bind to this resource anchor
   * NO_AUTO_BIND - compartment will not be created and later customer can bind existing compartment.
   * to this resource anchor. This is for future use only
   *
   */
  "setupMode"?: NetworkAnchor.SetupMode;
  /**
   * The CPG ID in which Network Anchor will be created.
   */
  "clusterPlacementGroupId"?: string;
  "ociMetadataItem"?: model.OciNetworkMetadata;
  "cloudServiceProviderMetadataItem"?: model.CloudServiceProviderNetworkMetadataItem;
}

export namespace NetworkAnchor {
  export enum LifecycleState {
    Creating = "CREATING",
    Updating = "UPDATING",
    Active = "ACTIVE",
    Deleting = "DELETING",
    Deleted = "DELETED",
    Failed = "FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum SetupMode {
    AutoBind = "AUTO_BIND",
    NoAutoBind = "NO_AUTO_BIND",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: NetworkAnchor): object {
    const jsonObj = {
      ...obj,
      ...{
        "ociMetadataItem": obj.ociMetadataItem
          ? model.OciNetworkMetadata.getJsonObj(obj.ociMetadataItem)
          : undefined,
        "cloudServiceProviderMetadataItem": obj.cloudServiceProviderMetadataItem
          ? model.CloudServiceProviderNetworkMetadataItem.getJsonObj(
              obj.cloudServiceProviderMetadataItem
            )
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: NetworkAnchor): object {
    const jsonObj = {
      ...obj,
      ...{
        "ociMetadataItem": obj.ociMetadataItem
          ? model.OciNetworkMetadata.getDeserializedJsonObj(obj.ociMetadataItem)
          : undefined,
        "cloudServiceProviderMetadataItem": obj.cloudServiceProviderMetadataItem
          ? model.CloudServiceProviderNetworkMetadataItem.getDeserializedJsonObj(
              obj.cloudServiceProviderMetadataItem
            )
          : undefined
      }
    };

    return jsonObj;
  }
}
