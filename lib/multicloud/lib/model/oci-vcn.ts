/**
 * Oracle Multicloud API
 * Use the Oracle Multicloud API to retrieve resource anchors and network anchors, and the metadata mappings related a Cloud Service Provider. For more information, see <link to docs>.
 * OpenAPI spec version: 20180828
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Oracle Cloud Infrastructure VCN basic information object. It is optional and planned to used for future for network anchor
 */
export interface OciVcn {
  /**
   * Oracle Cloud Infrastructure VCN OCID. CSP can not set this property.
   */
  "vcnId"?: string;
  /**
   * Oracle Cloud Infrastructure primary cidr block. CSP can set this property
   * It's optional only if disconnect anchor is allowed
   * IPv4 CIDR blocks for the VCN that meet the following criteria
   * Type: [string (length: 1\u201332), ...]
   * The CIDR blocks must be valid.
   * They must not overlap with each other or with the on-premises network CIDR block.
   *
   */
  "cidrBlocks"?: Array<string>;
  /**
   * Oracle Cloud Infrastructure backup cidr block. CSP can set this property
   * It's optional only if disconnect anchor is allowed.
   * IPv4 CIDR blocks for the VCN that meet the following criteria
   * Type: [string (length: 1\u201332), ...]
   * The CIDR blocks must be valid.
   * They must not overlap with each other or with the on-premises network CIDR block.
   *
   */
  "backupCidrBlocks"?: Array<string>;
  /**
   * Oracle Cloud Infrastructure DNS label. This is optional if DNS config is provided.
   */
  "dnsLabel"?: string;
}

export namespace OciVcn {
  export function getJsonObj(obj: OciVcn): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: OciVcn): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
