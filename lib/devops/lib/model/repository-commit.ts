/**
 * DevOps API
 * Use the DevOps API to create DevOps projects, configure code repositories,  add artifacts to deploy, build and test software applications, configure  target deployment environments, and deploy software applications.  For more information, see [DevOps](https://docs.oracle.com/iaas/Content/devops/using/home.htm).
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Commit object with commit information.
 */
export interface RepositoryCommit {
  /**
   * Commit hash pointed to by reference name.
   */
  "commitId": string;
  /**
   * The commit message.
   */
  "commitMessage": string;
  /**
   * Name of the author of the repository.
   */
  "authorName"?: string;
  /**
   * Email of the author of the repository.
   */
  "authorEmail"?: string;
  /**
   * Name of who creates the commit.
   */
  "committerName"?: string;
  /**
   * Email of who creates the commit.
   */
  "committerEmail"?: string;
  /**
   * Id of the PullRequest that this commit was merged with.
   */
  "mergedPullRequestId"?: string;
  /**
   * An array of parent commit IDs of created commit.
   */
  "parentCommitIds"?: Array<string>;
  /**
   * The time at which commit was created.
   */
  "timeCreated"?: Date;
  /**
   * Tree information for the specified commit.
   */
  "treeId"?: string;
}

export namespace RepositoryCommit {
  export function getJsonObj(obj: RepositoryCommit): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: RepositoryCommit): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
