/**
 *
 *
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/announcementsservice/ListAnnouncements.ts.html |here} to see how to use ListAnnouncementsRequest.
 */
export interface ListAnnouncementsRequest extends common.BaseRequest {
  /**
   * The OCID of the compartment.
   *
   */
  "compartmentId": string;
  /**
   * The maximum number of items to return in a paginated \"List\" call.
   */
  "limit"?: number;
  /**
   * The value of the {@code opc-next-page} response header from the previous \"List\" call.
   */
  "page"?: string;
  /**
   * The type of announcement.
   */
  "announcementType"?: string;
  /**
   * The announcement's current lifecycle state.
   */
  "lifecycleState"?: ListAnnouncementsRequest.LifecycleState;
  /**
   * Whether the announcement is displayed as a console banner.
   */
  "isBanner"?: boolean;
  /**
   * The criteria to sort by. You can specify only one sort order.
   *
   */
  "sortBy"?: ListAnnouncementsRequest.SortBy;
  /**
   * The sort order to use. (Sorting by {@code announcementType} orders the announcements list according to importance.)
   *
   */
  "sortOrder"?: ListAnnouncementsRequest.SortOrder;
  /**
   * The boundary for the earliest {@code timeOneValue} date on announcements that you want to see.
   */
  "timeOneEarliestTime"?: Date;
  /**
   * The boundary for the latest {@code timeOneValue} date on announcements that you want to see.
   */
  "timeOneLatestTime"?: Date;
  /**
   * A filter to return only announcements that match a specific environment name.
   */
  "environmentName"?: string;
  /**
   * A filter to return only announcements affecting a specific service.
   */
  "service"?: string;
  /**
   * A filter to return only announcements affecting a specific platform.
   */
  "platformType"?: ListAnnouncementsRequest.PlatformType;
  /**
   * Exclude The type of announcement.
   */
  "excludeAnnouncementTypes"?: Array<string>;
  /**
   * A filter to display only the latest announcement in a chain.
   */
  "shouldShowOnlyLatestInChain"?: boolean;
  /**
   * A filter to return only announcements belonging to the specified announcement chain ID.
   */
  "chainId"?: string;
  /**
   * The unique Oracle-assigned identifier for the request. If you need to contact Oracle about
   * a particular request, please provide the complete request ID.
   *
   */
  "opcRequestId"?: string;
}

export namespace ListAnnouncementsRequest {
  export enum LifecycleState {
    Active = "ACTIVE",
    Inactive = "INACTIVE"
  }

  export enum SortBy {
    TimeOneValue = "timeOneValue",
    TimeTwoValue = "timeTwoValue",
    TimeCreated = "timeCreated",
    ReferenceTicketNumber = "referenceTicketNumber",
    Summary = "summary",
    AnnouncementType = "announcementType"
  }

  export enum SortOrder {
    Asc = "ASC",
    Desc = "DESC"
  }

  export enum PlatformType {
    Iaas = "IAAS",
    Saas = "SAAS",
    Paas = "PAAS"
  }
}
