/**
 * Data Science API
 * Use the Data Science API to organize your data science work, access data and computing resources, and build, train, deploy and manage models and model deployments. For more information, see [Data Science](https://docs.oracle.com/iaas/data-science/using/data-science.htm).

 * OpenAPI spec version: 20190101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Description of PipelineRun.
 */
export interface PipelineRun {
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline run.
   */
  "id": string;
  /**
   * The date and time the pipeline run was accepted in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
   */
  "timeAccepted": Date;
  /**
   * The date and time the pipeline run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
   */
  "timeStarted"?: Date;
  /**
   * The date and time the pipeline run was updated in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
   */
  "timeUpdated"?: Date;
  /**
   * The date and time the pipeline run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
   */
  "timeFinished"?: Date;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the pipeline run.
   */
  "createdBy": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate the pipeline run with.
   */
  "projectId": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the pipeline run.
   */
  "compartmentId": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline.
   */
  "pipelineId": string;
  /**
   * A user-friendly display name for the resource.
   */
  "displayName": string;
  "configurationDetails"?: model.PipelineDefaultConfigurationDetails;
  "configurationOverrideDetails"?: model.PipelineDefaultConfigurationDetails;
  "logConfigurationOverrideDetails"?: model.PipelineLogConfigurationDetails;
  "infrastructureConfigurationOverrideDetails"?: model.PipelineInfrastructureConfigurationDetails;
  /**
   * Array of step override details. Only Step Configuration is allowed to be overridden.
   */
  "stepOverrideDetails"?: Array<model.PipelineStepOverrideDetails>;
  "logDetails"?: model.PipelineRunLogDetails;
  /**
   * Array of StepRun object for each step.
   */
  "stepRuns": Array<model.PipelineStepRun>;
  /**
   * The current state of the pipeline run.
   */
  "lifecycleState": model.PipelineRunLifecycleState;
  /**
   * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in 'Failed' state.
   */
  "lifecycleDetails"?: string;
  /**
   * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
   * Example: {@code {\"Department\": \"Finance\"}}
   *
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
   * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * Usage of system tag keys. These predefined keys are scoped to namespaces.
   * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
   *
   */
  "systemTags"?: { [key: string]: { [key: string]: any } };
}

export namespace PipelineRun {
  export function getJsonObj(obj: PipelineRun): object {
    const jsonObj = {
      ...obj,
      ...{
        "configurationDetails": obj.configurationDetails
          ? model.PipelineConfigurationDetails.getJsonObj(obj.configurationDetails)
          : undefined,
        "configurationOverrideDetails": obj.configurationOverrideDetails
          ? model.PipelineConfigurationDetails.getJsonObj(obj.configurationOverrideDetails)
          : undefined,
        "logConfigurationOverrideDetails": obj.logConfigurationOverrideDetails
          ? model.PipelineLogConfigurationDetails.getJsonObj(obj.logConfigurationOverrideDetails)
          : undefined,
        "infrastructureConfigurationOverrideDetails": obj.infrastructureConfigurationOverrideDetails
          ? model.PipelineInfrastructureConfigurationDetails.getJsonObj(
              obj.infrastructureConfigurationOverrideDetails
            )
          : undefined,
        "stepOverrideDetails": obj.stepOverrideDetails
          ? obj.stepOverrideDetails.map(item => {
              return model.PipelineStepOverrideDetails.getJsonObj(item);
            })
          : undefined,
        "logDetails": obj.logDetails
          ? model.PipelineRunLogDetails.getJsonObj(obj.logDetails)
          : undefined,
        "stepRuns": obj.stepRuns
          ? obj.stepRuns.map(item => {
              return model.PipelineStepRun.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: PipelineRun): object {
    const jsonObj = {
      ...obj,
      ...{
        "configurationDetails": obj.configurationDetails
          ? model.PipelineConfigurationDetails.getDeserializedJsonObj(obj.configurationDetails)
          : undefined,
        "configurationOverrideDetails": obj.configurationOverrideDetails
          ? model.PipelineConfigurationDetails.getDeserializedJsonObj(
              obj.configurationOverrideDetails
            )
          : undefined,
        "logConfigurationOverrideDetails": obj.logConfigurationOverrideDetails
          ? model.PipelineLogConfigurationDetails.getDeserializedJsonObj(
              obj.logConfigurationOverrideDetails
            )
          : undefined,
        "infrastructureConfigurationOverrideDetails": obj.infrastructureConfigurationOverrideDetails
          ? model.PipelineInfrastructureConfigurationDetails.getDeserializedJsonObj(
              obj.infrastructureConfigurationOverrideDetails
            )
          : undefined,
        "stepOverrideDetails": obj.stepOverrideDetails
          ? obj.stepOverrideDetails.map(item => {
              return model.PipelineStepOverrideDetails.getDeserializedJsonObj(item);
            })
          : undefined,
        "logDetails": obj.logDetails
          ? model.PipelineRunLogDetails.getDeserializedJsonObj(obj.logDetails)
          : undefined,
        "stepRuns": obj.stepRuns
          ? obj.stepRuns.map(item => {
              return model.PipelineStepRun.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
