/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](https://docs.oracle.com/iaas/Content/Network/Concepts/overview.htm),
[Compute](https://docs.oracle.com/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](https://docs.oracle.com/iaas/Content/Block/Concepts/overview.htm) services.
The required permissions are documented in the
[Details for the Core Services](https://docs.oracle.com/iaas/Content/Identity/Reference/corepolicyreference.htm) article.

 * OpenAPI spec version: 20160918
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Provides the IP Inventory details of a subnet and its associated resources.
 *
 */
export interface IpInventorySubnetResourceSummary {
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IP address.
   */
  "ipId"?: string;
  /**
   * Lists the allocated private IP address.
   */
  "ipAddress"?: string;
  /**
   * Lifetime of the allocated private IP address.
   */
  "ipAddressLifetime"?: IpInventorySubnetResourceSummary.IpAddressLifetime;
  /**
   * The address range the IP address is assigned from.
   */
  "parentCidr"?: string;
  /**
   * Associated public IP address for the private IP address.
   */
  "associatedPublicIp"?: string;
  /**
   * Lifetime of the assigned public IP address.
   */
  "publicIpLifetime"?: IpInventorySubnetResourceSummary.PublicIpLifetime;
  /**
   * Public IP address Pool the IP address is allocated from.
   */
  "associatedPublicIpPool"?: IpInventorySubnetResourceSummary.AssociatedPublicIpPool;
  /**
   * DNS hostname of the IP address.
   */
  "dnsHostName"?: string;
  /**
   * Name of the created resource.
   */
  "assignedResourceName"?: string;
  /**
   * Primary flag for IP Resource
   */
  "isPrimary"?: boolean;
  /**
   * Type of the resource.
   */
  "assignedResourceType"?: IpInventorySubnetResourceSummary.AssignedResourceType;
  /**
   * Address type of the allocated private IP address.
   */
  "addressType"?: string;
  /**
   * Assigned time of the private IP address.
   */
  "assignedTime"?: Date;
}

export namespace IpInventorySubnetResourceSummary {
  export enum IpAddressLifetime {
    Ephemeral = "Ephemeral",
    Reserved = "Reserved",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum PublicIpLifetime {
    Ephemeral = "Ephemeral",
    Reserved = "Reserved",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum AssociatedPublicIpPool {
    Oracle = "ORACLE",
    Byoip = "BYOIP",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum AssignedResourceType {
    Resource = "Resource",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: IpInventorySubnetResourceSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: IpInventorySubnetResourceSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
