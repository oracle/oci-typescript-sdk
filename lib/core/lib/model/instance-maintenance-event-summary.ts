/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.
The required permissions are documented in the
[Details for the Core Services](/iaas/Content/Identity/Reference/corepolicyreference.htm) article.

 * OpenAPI spec version: 20160918
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * It is the event in which the maintenance action will be be performed on the customer instance on the scheduled date and time.
 *
 */
export interface InstanceMaintenanceEventSummary {
  /**
    * Defined tags for this resource. Each key is predefined and scoped to a
* namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
* <p>
Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
* 
    */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * A user-friendly name. Does not have to be unique, and it's changeable.
   * Avoid entering confidential information.
   *
   */
  "displayName"?: string;
  /**
    * Free-form tags for this resource. Each tag is a simple key-value pair with no
* predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
* <p>
Example: {@code {\"Department\": \"Finance\"}}
* 
    */
  "freeformTags"?: { [key: string]: string };
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance event.
   *
   */
  "id": string;
  /**
   * The OCID of the instance.
   */
  "instanceId": string;
  /**
   * The OCID of the compartment that contains the instance.
   *
   */
  "compartmentId": string;
  /**
   * This indicates the priority and allowed actions for this Maintenance. Higher priority forms of Maintenance have
   * tighter restrictions and may not be rescheduled, while lower priority/severity Maintenance can be rescheduled,
   * deferred, or even cancelled. Please see the
   * [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
   *
   */
  "maintenanceCategory": string;
  /**
   * This is the reason that Maintenance is being performed. See
   * [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
   *
   */
  "maintenanceReason": string;
  /**
   * This is the action that will be performed on the Instance by OCI when the Maintenance begins.
   *
   */
  "instanceAction": string;
  /**
   * These are alternative actions to the requested instanceAction that can be taken to resolve the Maintenance.
   *
   */
  "alternativeResolutionActions": Array<
    InstanceMaintenanceEventSummary.AlternativeResolutionActions
  >;
  /**
   * The time at which the Maintenance actually started.
   *
   */
  "timeStarted"?: Date;
  /**
   * The time at which the Maintenance actually finished.
   *
   */
  "timeFinished"?: Date;
  /**
   * The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before
   * this time.
   *
   */
  "timeWindowStart": Date;
  /**
   * The duration of the time window Maintenance is scheduled to begin within.
   *
   */
  "startWindowDuration"?: string;
  /**
   * This is the estimated duration of the Maintenance, once the Maintenance has entered the STARTED state.
   *
   */
  "estimatedDuration"?: string;
  /**
   * It is the scheduled hard due date and time of the maintenance event.
   * The maintenance event will happen at this time and the due date will not be extended.
   *
   */
  "timeHardDueDate"?: Date;
  /**
   * Indicates if this MaintenanceEvent is capable of being rescheduled up to the timeHardDueDate.
   *
   */
  "canReschedule": boolean;
  /**
   * The date and time the maintenance event was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
   * Example: {@code 2016-08-25T21:10:29.600Z}
   *
   */
  "timeCreated": Date;
  /**
   * The current state of the maintenance event.
   *
   */
  "lifecycleState": string;
  /**
   * The creator of the maintenance event.
   *
   */
  "createdBy": string;
  /**
   * It is the descriptive information about the maintenance taking place on the customer instance.
   *
   */
  "description"?: string;
  /**
   * A unique identifier that will group Instances that have a relationship with one another and must be scheduled
   * together for the Maintenance to proceed. Any Instances that have a relationship with one another from a Maintenance
   * perspective will have a matching correlationToken.
   *
   */
  "correlationToken"?: string;
}

export namespace InstanceMaintenanceEventSummary {
  export enum AlternativeResolutionActions {
    RebootMigration = "REBOOT_MIGRATION",
    Terminate = "TERMINATE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: InstanceMaintenanceEventSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: InstanceMaintenanceEventSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
