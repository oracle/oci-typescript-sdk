/**
 * Database Migration API
 * Use the Oracle Cloud Infrastructure Database Migration APIs to perform database migration operations.
 * OpenAPI spec version: 20230518
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Results of a Database Connection search. Contains DatabaseConnectionSummary items.
 *
 */
export interface Job {
  /**
   * The OCID of the Migration Job.
   *
   */
  "id": string;
  /**
   * Name of the job.
   *
   */
  "displayName": string;
  /**
   * The OCID of the Migration that this job belongs to.
   *
   */
  "migrationId": string;
  /**
   * The job type.
   *
   */
  "type": model.JobTypes;
  /**
   * The time the Migration Job was created. An RFC3339 formatted datetime string
   *
   */
  "timeCreated": Date;
  /**
   * The time the Migration Job was last updated. An RFC3339 formatted datetime string
   *
   */
  "timeUpdated"?: Date;
  "progress"?: model.MigrationJobProgressResource;
  /**
   * Database objects not supported.
   *
   */
  "unsupportedObjects"?: Array<model.UnsupportedDatabaseObject>;
  /**
   * The current state of the migration job.
   *
   */
  "lifecycleState": model.JobLifecycleStates;
  /**
   * A message describing the current state in more detail. For example, can be used to provide actionable information
   * for a resource in Failed state.
   *
   */
  "lifecycleDetails"?: string;
  /**
   * A list of parameter file versions that can be viewed or edited for the current job.
   *
   */
  "parameterFileVersions"?: Array<model.ParameterFileVersionSummary>;
  /**
   * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
   * For more information, see Resource Tags. Example: {\"Department\": \"Finance\"}
   *
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * Usage of system tag keys. These predefined keys are scoped to namespaces.
   * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
   *
   */
  "systemTags"?: { [key: string]: { [key: string]: any } };
}

export namespace Job {
  export function getJsonObj(obj: Job): object {
    const jsonObj = {
      ...obj,
      ...{
        "progress": obj.progress
          ? model.MigrationJobProgressResource.getJsonObj(obj.progress)
          : undefined,
        "unsupportedObjects": obj.unsupportedObjects
          ? obj.unsupportedObjects.map(item => {
              return model.UnsupportedDatabaseObject.getJsonObj(item);
            })
          : undefined,

        "parameterFileVersions": obj.parameterFileVersions
          ? obj.parameterFileVersions.map(item => {
              return model.ParameterFileVersionSummary.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: Job): object {
    const jsonObj = {
      ...obj,
      ...{
        "progress": obj.progress
          ? model.MigrationJobProgressResource.getDeserializedJsonObj(obj.progress)
          : undefined,
        "unsupportedObjects": obj.unsupportedObjects
          ? obj.unsupportedObjects.map(item => {
              return model.UnsupportedDatabaseObject.getDeserializedJsonObj(item);
            })
          : undefined,

        "parameterFileVersions": obj.parameterFileVersions
          ? obj.parameterFileVersions.map(item => {
              return model.ParameterFileVersionSummary.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
