/**
 * Java Management Service Fleets API
 * The APIs for the [Fleet Management](https://docs.oracle.com/en-us/iaas/jms/doc/fleet-management.html) feature of Java Management Service to monitor and manage the usage of Java in your enterprise. Use these APIs to manage fleets, configure managed instances to report to fleets, and gain insights into the Java workloads running on these instances by carrying out basic and advanced features.
 * OpenAPI spec version: 20210610
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Attributes to update a Fleet Agent Configuration.
 */
export interface UpdateFleetAgentConfigurationDetails {
  /**
   * The frequency (in minutes) of JRE scanning. (That is, how often should JMS scan for JRE installations.)
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "jreScanFrequencyInMinutes"?: number;
  /**
   * The frequency (in minutes) of Java Usage Tracker processing. (That is, how often should JMS process data from the Java Usage Tracker.)
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "javaUsageTrackerProcessingFrequencyInMinutes"?: number;
  /**
   * The validity period in days for work requests.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "workRequestValidityPeriodInDays"?: number;
  /**
   * Agent polling interval in minutes
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "agentPollingIntervalInMinutes"?: number;
  /**
   * Collect JMS agent metrics on all managed instances in the fleet.
   *
   */
  "isCollectingManagedInstanceMetricsEnabled"?: boolean;
  /**
   * Collect username for application invocations for all managed instances in the fleet.
   *
   */
  "isCollectingUsernamesEnabled"?: boolean;
  /**
   * Collect network addresses of managed instances in the fleet.
   *
   */
  "isCapturingIpAddressAndFqdnEnabled"?: boolean;
  /**
   * Enable libraries scan on all managed instances in the fleet.
   *
   */
  "isLibrariesScanEnabled"?: boolean;
  "linuxConfiguration"?: model.FleetAgentOsConfiguration;
  "windowsConfiguration"?: model.FleetAgentOsConfiguration;
  "macOsConfiguration"?: model.FleetAgentOsConfiguration;
}

export namespace UpdateFleetAgentConfigurationDetails {
  export function getJsonObj(obj: UpdateFleetAgentConfigurationDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "linuxConfiguration": obj.linuxConfiguration
          ? model.FleetAgentOsConfiguration.getJsonObj(obj.linuxConfiguration)
          : undefined,
        "windowsConfiguration": obj.windowsConfiguration
          ? model.FleetAgentOsConfiguration.getJsonObj(obj.windowsConfiguration)
          : undefined,
        "macOsConfiguration": obj.macOsConfiguration
          ? model.FleetAgentOsConfiguration.getJsonObj(obj.macOsConfiguration)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: UpdateFleetAgentConfigurationDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "linuxConfiguration": obj.linuxConfiguration
          ? model.FleetAgentOsConfiguration.getDeserializedJsonObj(obj.linuxConfiguration)
          : undefined,
        "windowsConfiguration": obj.windowsConfiguration
          ? model.FleetAgentOsConfiguration.getDeserializedJsonObj(obj.windowsConfiguration)
          : undefined,
        "macOsConfiguration": obj.macOsConfiguration
          ? model.FleetAgentOsConfiguration.getDeserializedJsonObj(obj.macOsConfiguration)
          : undefined
      }
    };

    return jsonObj;
  }
}
