/**
 * Java Management Service Fleets API
 * The APIs for the [Fleet Management](https://docs.oracle.com/en-us/iaas/jms/doc/fleet-management.html) feature of Java Management Service to monitor and manage the usage of Java in your enterprise. Use these APIs to manage fleets, configure managed instances to report to fleets, and gain insights into the Java workloads running on these instances by carrying out basic and advanced features.
 * OpenAPI spec version: 20210610
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A summary of the task schedule properties.
 */
export interface TaskScheduleSummary {
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this task schedule.
   */
  "id": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
   */
  "fleetId": string;
  /**
   * The name of the task schedule.
   */
  "name": string;
  /**
   * The current state of the task schedule.
   */
  "lifecycleState": string;
  /**
   * The name of the task creator.
   */
  "createdBy": string;
  /**
   * Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000
   * RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
   *
   */
  "executionRecurrences": string;
  "taskDetails":
    | model.DeployedApplicationMigrationTaskDetails
    | model.RemoveInstallationSiteTaskDetails
    | model.CryptoTaskDetails
    | model.JavaMigrationTaskDetails
    | model.ScanLibraryTaskDetails
    | model.PerformanceTuningTaskDetails
    | model.ScanJavaServerTaskDetails
    | model.JfrTaskDetails
    | model.AddInstallationSiteTaskDetails;
  /**
   * The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
   */
  "timeCreated": Date;
  /**
   * The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
   */
  "timeLastRun"?: Date;
  /**
   * The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
   */
  "timeNextRun"?: Date;
  /**
   * The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
   */
  "timeLastUpdated": Date;
}

export namespace TaskScheduleSummary {
  export function getJsonObj(obj: TaskScheduleSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "taskDetails": obj.taskDetails ? model.TaskDetails.getJsonObj(obj.taskDetails) : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: TaskScheduleSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "taskDetails": obj.taskDetails
          ? model.TaskDetails.getDeserializedJsonObj(obj.taskDetails)
          : undefined
      }
    };

    return jsonObj;
  }
}
