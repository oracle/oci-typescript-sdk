/**
 * Java Management Service Fleets API
 * The APIs for the [Fleet Management](https://docs.oracle.com/en-us/iaas/jms/doc/fleet-management.html) feature of Java Management Service to monitor and manage the usage of Java in your enterprise. Use these APIs to manage fleets, configure managed instances to report to fleets, and gain insights into the Java workloads running on these instances by carrying out basic and advanced features.
 * OpenAPI spec version: 20210610
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Export settings of a fleet.
 *
 */
export interface ExportSetting {
  /**
   * The internal identifier of the export setting.
   *
   */
  "exportSettingKey"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet.
   *
   */
  "fleetId"?: string;
  /**
   * The duration of data to be exported for fleets.
   *
   */
  "exportDuration"?: model.ExportDuration;
  /**
   * Resource to export data associated from the fleets.
   *
   */
  "exportResources"?: model.ExportResources;
  /**
   * Acknowledgement for cross region target bucket configuration.
   *
   */
  "isCrossRegionAcknowledged"?: boolean;
  /**
   * The name of the bucket where data will be exported.
   *
   */
  "targetBucketName"?: string;
  /**
   * The namespace of the bucket where data will be exported.
   *
   */
  "targetBucketNamespace"?: string;
  /**
   * The id of the region of the target bucket.
   *
   */
  "targetBucketRegion"?: string;
  /**
   * Schedule at which data will be exported.
   *
   */
  "exportFrequency"?: model.ExportFrequency;
  /**
   * ExportSetting flag to store enabled or disabled status.
   */
  "isEnabled": boolean;
  /**
   * The creation date and time of the export setting (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
   *
   */
  "timeCreated"?: Date;
  /**
   * The update date and time of the export setting (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
   *
   */
  "timeLastModified"?: Date;
  "exportDataFilters"?: model.ExportDataFilters;
}

export namespace ExportSetting {
  export function getJsonObj(obj: ExportSetting): object {
    const jsonObj = {
      ...obj,
      ...{
        "exportDataFilters": obj.exportDataFilters
          ? model.ExportDataFilters.getJsonObj(obj.exportDataFilters)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ExportSetting): object {
    const jsonObj = {
      ...obj,
      ...{
        "exportDataFilters": obj.exportDataFilters
          ? model.ExportDataFilters.getDeserializedJsonObj(obj.exportDataFilters)
          : undefined
      }
    };

    return jsonObj;
  }
}
